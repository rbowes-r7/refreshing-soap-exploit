<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Networking.ProfileIPIP"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="Common.ProfileEnabledState">
			<xsd:sequence>
				<xsd:element name="value" type="tns:Common.EnabledState"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="Networking.ProfileTunnelProtocolSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Networking.ProfileTunnelProtocol[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Common.EnabledState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="STATE_DISABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_DISABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="STATE_ENABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_ENABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Networking.ProfileTunnelProtocol">
			<xsd:sequence>
				<xsd:element name="value" type="tns:Networking.TunnelProtocol"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="Common.BooleanSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.ProfileEnabledStateSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.ProfileEnabledState[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Networking.TunnelProtocol">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="TUNNEL_PROTOCOL_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>TUNNEL_PROTOCOL_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="TUNNEL_PROTOCOL_IPV4">
					<xsd:annotation>
						<xsd:documentation>TUNNEL_PROTOCOL_IPV4</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="TUNNEL_PROTOCOL_IPV6">
					<xsd:annotation>
						<xsd:documentation>TUNNEL_PROTOCOL_IPV6</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Networking.ProfileIPIP.get_listRequest">
</message>
<message name="Networking.ProfileIPIP.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileIPIP.createRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.createResponse">
</message>

<message name="Networking.ProfileIPIP.delete_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.delete_profileResponse">
</message>

<message name="Networking.ProfileIPIP.delete_all_profilesRequest">
</message>
<message name="Networking.ProfileIPIP.delete_all_profilesResponse">
</message>

<message name="Networking.ProfileIPIP.is_base_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.is_base_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="Networking.ProfileIPIP.is_system_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.is_system_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="Networking.ProfileIPIP.set_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="defaults" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.set_default_profileResponse">
</message>

<message name="Networking.ProfileIPIP.get_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.get_default_profileResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileIPIP.set_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.set_descriptionResponse">
</message>

<message name="Networking.ProfileIPIP.get_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileIPIP.set_protocolRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="protocols" type="tns:Networking.ProfileTunnelProtocolSequence"/>
</message>
<message name="Networking.ProfileIPIP.set_protocolResponse">
</message>

<message name="Networking.ProfileIPIP.get_protocolRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.get_protocolResponse">
	<part name="return" type="tns:Networking.ProfileTunnelProtocolSequence"/>
</message>

<message name="Networking.ProfileIPIP.set_ds_lite_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:Common.ProfileEnabledStateSequence"/>
</message>
<message name="Networking.ProfileIPIP.set_ds_lite_stateResponse">
</message>

<message name="Networking.ProfileIPIP.get_ds_lite_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileIPIP.get_ds_lite_stateResponse">
	<part name="return" type="tns:Common.ProfileEnabledStateSequence"/>
</message>

<message name="Networking.ProfileIPIP.get_versionRequest">
</message>
<message name="Networking.ProfileIPIP.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Networking.ProfileIPIPPortType">
	<operation name="get_list">
  	<documentation>
 Gets the names for all IP-IP tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_listRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates a set of IP-IP tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.createRequest"/>
		<output message="tns:Networking.ProfileIPIP.createResponse"/>
	</operation>
	<operation name="delete_profile">
	<documentation>
 Deletes a set of IP-IP tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.delete_profileRequest"/>
		<output message="tns:Networking.ProfileIPIP.delete_profileResponse"/>
	</operation>
	<operation name="delete_all_profiles">
	<documentation>
 Deletes all non-system IP-IP tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.delete_all_profilesRequest"/>
		<output message="tns:Networking.ProfileIPIP.delete_all_profilesResponse"/>
	</operation>
	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified IP-IP tunnel profiles are base
 profiles.  A base profile sits at the base of the profile's
 inheritance tree, supplying the defaults for every profile derived
 from it.  (See also is_system_profile).

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.is_base_profileRequest"/>
		<output message="tns:Networking.ProfileIPIP.is_base_profileResponse"/>
	</operation>
	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified IP-IP tunnel profiles are system
 profiles.  A system profile is a profile pre-configured on the
 system, ready for use.  Non-system profiles are profiles created or
 modified by a user.  Note that if a system profile is modified, it
 is no longer considered a system profile.  (See also
 is_base_profile).

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.is_system_profileRequest"/>
		<output message="tns:Networking.ProfileIPIP.is_system_profileResponse"/>
	</operation>
	<operation name="set_default_profile">
	<documentation>
 Sets the existing IP-IP tunnel profile from which this set of IP-IP
 tunnel profiles inherits their unspecified attribute values.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.set_default_profileRequest"/>
		<output message="tns:Networking.ProfileIPIP.set_default_profileResponse"/>
	</operation>
	<operation name="get_default_profile">
	<documentation>
 Gets the existing IP-IP tunnel profile from which this set of IP-IP
 profiles inherits its unspecified attribute values.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_default_profileRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_default_profileResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for a set of IP-IP tunnel profiles.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.set_descriptionRequest"/>
		<output message="tns:Networking.ProfileIPIP.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of IP-IP tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_descriptionRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_descriptionResponse"/>
	</operation>
	<operation name="set_protocol">
	<documentation>
 Sets the next header IP protocols for a set of IP-IP tunnel 
 profiles. The protocol is for the inner header in an IPIP
 packet. For example, for an IP6-in-IP4(6in4) packet, the inner header
 protocol would be TUNNEL_PROTOCOL_IPV6 for protocol IPv6.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.set_protocolRequest"/>
		<output message="tns:Networking.ProfileIPIP.set_protocolResponse"/>
	</operation>
	<operation name="get_protocol">
	<documentation>
 Gets the next header IP protocols for a set of IP-IP tunnel 
 profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_protocolRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_protocolResponse"/>
	</operation>
	<operation name="set_ds_lite_state">
	<documentation>
 Sets the DS-Lite state for a set of IP-IP tunnel 
 profiles. 

 Specifies whether the profile is used for a DS-lite(Dual Stack -
 lite) deployment.
 When enabled, an augmented flow lookup is made using the IPv6
 address in the outer header in addition to the inner header
 addresses for packets coming over this tunnel. The default value is
 disabled.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.set_ds_lite_stateRequest"/>
		<output message="tns:Networking.ProfileIPIP.set_ds_lite_stateResponse"/>
	</operation>
	<operation name="get_ds_lite_state">
	<documentation>
 Gets the DS-Lite states for a set of IP-IP tunnel 
 profiles.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_ds_lite_stateRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_ds_lite_stateResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:Networking.ProfileIPIP.get_versionRequest"/>
		<output message="tns:Networking.ProfileIPIP.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Networking.ProfileIPIPBinding" type="tns:Networking.ProfileIPIPPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets the names for all IP-IP tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates a set of IP-IP tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_profile">
	<documentation>
 Deletes a set of IP-IP tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_profiles">
	<documentation>
 Deletes all non-system IP-IP tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified IP-IP tunnel profiles are base
 profiles.  A base profile sits at the base of the profile's
 inheritance tree, supplying the defaults for every profile derived
 from it.  (See also is_system_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified IP-IP tunnel profiles are system
 profiles.  A system profile is a profile pre-configured on the
 system, ready for use.  Non-system profiles are profiles created or
 modified by a user.  Note that if a system profile is modified, it
 is no longer considered a system profile.  (See also
 is_base_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_default_profile">
	<documentation>
 Sets the existing IP-IP tunnel profile from which this set of IP-IP
 tunnel profiles inherits their unspecified attribute values.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_default_profile">
	<documentation>
 Gets the existing IP-IP tunnel profile from which this set of IP-IP
 profiles inherits its unspecified attribute values.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for a set of IP-IP tunnel profiles.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of IP-IP tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_protocol">
	<documentation>
 Sets the next header IP protocols for a set of IP-IP tunnel 
 profiles. The protocol is for the inner header in an IPIP
 packet. For example, for an IP6-in-IP4(6in4) packet, the inner header
 protocol would be TUNNEL_PROTOCOL_IPV6 for protocol IPv6.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_protocol">
	<documentation>
 Gets the next header IP protocols for a set of IP-IP tunnel 
 profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_ds_lite_state">
	<documentation>
 Sets the DS-Lite state for a set of IP-IP tunnel 
 profiles. 

 Specifies whether the profile is used for a DS-lite(Dual Stack -
 lite) deployment.
 When enabled, an augmented flow lookup is made using the IPv6
 address in the outer header in addition to the inner header
 addresses for packets coming over this tunnel. The default value is
 disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_ds_lite_state">
	<documentation>
 Gets the DS-Lite states for a set of IP-IP tunnel 
 profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileIPIP"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileIPIP"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Networking.ProfileIPIP">
	<documentation>
 The ProfileIPIP interface enables you to manipulate an IP-IP tunnel
 profile to configure the IP-within-IP tunneling protocol.  The
 IP-within-IP protocol (RFC2003) specifies how to encapsulate an IP
 packet within another IP packet.

        	</documentation>
	<port name="Networking.ProfileIPIPPort" binding="tns:Networking.ProfileIPIPBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
