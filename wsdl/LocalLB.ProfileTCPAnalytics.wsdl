<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="LocalLB.ProfileTCPAnalytics"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="LocalLB.ProfileEnabledState">
			<xsd:sequence>
				<xsd:element name="value" type="tns:Common.EnabledState"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="LocalLB.ProfileStringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:LocalLB.ProfileString[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Common.EnabledState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="STATE_DISABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_DISABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="STATE_ENABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_ENABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.BooleanSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="LocalLB.ProfileString">
			<xsd:sequence>
				<xsd:element name="value" type="xsd:string"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="LocalLB.ProfileEnabledStateSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:LocalLB.ProfileEnabledState[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="LocalLB.ProfileTCPAnalytics.get_listRequest">
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.createRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.createResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.delete_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.delete_profileResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.delete_all_profilesRequest">
</message>
<message name="LocalLB.ProfileTCPAnalytics.delete_all_profilesResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.is_base_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.is_base_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.is_system_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.is_system_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="defaults" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_default_profileResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_default_profileResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collected_by_client_side_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collected_by_client_side_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collected_by_client_side_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collected_by_client_side_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collected_by_server_side_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collected_by_server_side_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collected_by_server_side_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collected_by_server_side_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collected_stats_internal_logging_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collected_stats_internal_logging_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collected_stats_internal_logging_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collected_stats_internal_logging_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collected_stats_external_logging_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collected_stats_external_logging_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collected_stats_external_logging_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collected_stats_external_logging_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_nexthop_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_nexthop_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_nexthop_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_nexthop_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_continent_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_continent_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_continent_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_continent_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_region_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_region_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_region_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_region_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_city_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_city_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_city_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_city_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_post_code_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_post_code_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_post_code_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_post_code_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_ip_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_ip_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_ip_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_ip_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_subnet_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_subnet_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_subnet_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_subnet_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_country_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_collect_by_country_stateResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_country_stateRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_collect_by_country_stateResponse">
	<part name="return" type="tns:LocalLB.ProfileEnabledStateSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_log_publisherRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="publishers" type="tns:LocalLB.ProfileStringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_log_publisherResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_log_publisherRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_log_publisherResponse">
	<part name="return" type="tns:LocalLB.ProfileStringSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.set_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.set_descriptionResponse">
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="LocalLB.ProfileTCPAnalytics.get_versionRequest">
</message>
<message name="LocalLB.ProfileTCPAnalytics.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="LocalLB.ProfileTCPAnalyticsPortType">
	<operation name="get_list">
     	<documentation>
 Gets a list of all TCP Analytics profiles.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_listRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates the specified TCP Analytics profile.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.createRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.createResponse"/>
	</operation>
	<operation name="delete_profile">
	<documentation>
 Deletes the specified TCP Analytics profile.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.delete_profileRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.delete_profileResponse"/>
	</operation>
	<operation name="delete_all_profiles">
	<documentation>
 Deletes all TCP Analytics profiles.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.delete_all_profilesRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.delete_all_profilesResponse"/>
	</operation>
	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified TCP Analytics profiles are base profiles.
 A base profile sits at the base of the profile's inheritance tree,
 supplying the defaults for every profile derived from it.  (See
 also is_system_profile).

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.is_base_profileRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.is_base_profileResponse"/>
	</operation>
	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified TCP Analytics profiles are system profiles.
 A system profile is a profile pre-configured on the system, ready
 for use.  Non-system profiles are profiles created or modified by a
 user.  Note that if a system profile is modified, it is no longer
 considered a system profile.  (See also is_base_profile).

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.is_system_profileRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.is_system_profileResponse"/>
	</operation>
	<operation name="set_default_profile">
	<documentation>
 Sets the names of the default profiles from which the specified profiles will derive
 default values for its attributes.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_default_profileRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_default_profileResponse"/>
	</operation>
	<operation name="get_default_profile">
	<documentation>
 Gets the names of the default profiles from which the specified profiles will derive
 default values for its attributes.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_default_profileRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_default_profileResponse"/>
	</operation>
	<operation name="set_collected_by_client_side_state">
	<documentation>
 Sets the state indicating if client side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.
 The default is enabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collected_by_client_side_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collected_by_client_side_stateResponse"/>
	</operation>
	<operation name="get_collected_by_client_side_state">
	<documentation>
 Gets the state indicating if client side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collected_by_client_side_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collected_by_client_side_stateResponse"/>
	</operation>
	<operation name="set_collected_by_server_side_state">
	<documentation>
 Sets the state indicating if server side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collected_by_server_side_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collected_by_server_side_stateResponse"/>
	</operation>
	<operation name="get_collected_by_server_side_state">
	<documentation>
 Gets the state indicating if server side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collected_by_server_side_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collected_by_server_side_stateResponse"/>
	</operation>
	<operation name="set_collected_stats_internal_logging_state">
	<documentation>
 Sets the state indicating if AVR logs TCP stats on the local device.
 The default is enabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collected_stats_internal_logging_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collected_stats_internal_logging_stateResponse"/>
	</operation>
	<operation name="get_collected_stats_internal_logging_state">
	<documentation>
 Gets the state indicating if AVR logs TCP stats on the local device.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collected_stats_internal_logging_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collected_stats_internal_logging_stateResponse"/>
	</operation>
	<operation name="set_collected_stats_external_logging_state">
	<documentation>
 Sets the state indicating if AVR logs TCP stats on an external
 device defined by external_logging_publisher.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collected_stats_external_logging_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collected_stats_external_logging_stateResponse"/>
	</operation>
	<operation name="get_collected_stats_external_logging_state">
	<documentation>
 Gets the state indicating if AVR logs TCP stats on an external
 device defined by external_logging_publisher.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collected_stats_external_logging_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collected_stats_external_logging_stateResponse"/>
	</operation>
	<operation name="set_collect_by_nexthop_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by nexthop ethernet address.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_nexthop_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_nexthop_stateResponse"/>
	</operation>
	<operation name="get_collect_by_nexthop_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by nexthop ethernet address.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_nexthop_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_nexthop_stateResponse"/>
	</operation>
	<operation name="set_collect_by_continent_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by continent.
 The default is enabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_continent_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_continent_stateResponse"/>
	</operation>
	<operation name="get_collect_by_continent_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by continent.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_continent_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_continent_stateResponse"/>
	</operation>
	<operation name="set_collect_by_region_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by region.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_region_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_region_stateResponse"/>
	</operation>
	<operation name="get_collect_by_region_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by region.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_region_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_region_stateResponse"/>
	</operation>
	<operation name="set_collect_by_city_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by city.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_city_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_city_stateResponse"/>
	</operation>
	<operation name="get_collect_by_city_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by city.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_city_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_city_stateResponse"/>
	</operation>
	<operation name="set_collect_by_post_code_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by postcode.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_post_code_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_post_code_stateResponse"/>
	</operation>
	<operation name="get_collect_by_post_code_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by postcode.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_post_code_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_post_code_stateResponse"/>
	</operation>
	<operation name="set_collect_by_remote_host_ip_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by remote host IP
 address.
 The default is disabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_ip_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_ip_stateResponse"/>
	</operation>
	<operation name="get_collect_by_remote_host_ip_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by remote host IP
 address.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_ip_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_ip_stateResponse"/>
	</operation>
	<operation name="set_collect_by_remote_host_subnet_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by remote host
 subnet.
 The default is enabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_subnet_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_remote_host_subnet_stateResponse"/>
	</operation>
	<operation name="get_collect_by_remote_host_subnet_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by remote host
 subnet.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_subnet_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_remote_host_subnet_stateResponse"/>
	</operation>
	<operation name="set_collect_by_country_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by country.
 The default is enabled.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_country_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_collect_by_country_stateResponse"/>
	</operation>
	<operation name="get_collect_by_country_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by country.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_country_stateRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_collect_by_country_stateResponse"/>
	</operation>
	<operation name="set_log_publisher">
	<documentation>
 Sets the log publishers for a set of TCP Analytics profiles. A log publisher is
 a set of log destinations for high-speed logging of formatted log messages.
 See Log::Publisher for more details.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_log_publisherRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_log_publisherResponse"/>
	</operation>
	<operation name="get_log_publisher">
	<documentation>
 Gets the log publishers for a set of TCP Analytics profiles.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_log_publisherRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_log_publisherResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for a set of TCP Analytics profiles.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.set_descriptionRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of TCP Analytics profiles.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_descriptionRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_descriptionResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:LocalLB.ProfileTCPAnalytics.get_versionRequest"/>
		<output message="tns:LocalLB.ProfileTCPAnalytics.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="LocalLB.ProfileTCPAnalyticsBinding" type="tns:LocalLB.ProfileTCPAnalyticsPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets a list of all TCP Analytics profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates the specified TCP Analytics profile.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_profile">
	<documentation>
 Deletes the specified TCP Analytics profile.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_profiles">
	<documentation>
 Deletes all TCP Analytics profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified TCP Analytics profiles are base profiles.
 A base profile sits at the base of the profile's inheritance tree,
 supplying the defaults for every profile derived from it.  (See
 also is_system_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified TCP Analytics profiles are system profiles.
 A system profile is a profile pre-configured on the system, ready
 for use.  Non-system profiles are profiles created or modified by a
 user.  Note that if a system profile is modified, it is no longer
 considered a system profile.  (See also is_base_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_default_profile">
	<documentation>
 Sets the names of the default profiles from which the specified profiles will derive
 default values for its attributes.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_default_profile">
	<documentation>
 Gets the names of the default profiles from which the specified profiles will derive
 default values for its attributes.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collected_by_client_side_state">
	<documentation>
 Sets the state indicating if client side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.
 The default is enabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collected_by_client_side_state">
	<documentation>
 Gets the state indicating if client side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collected_by_server_side_state">
	<documentation>
 Sets the state indicating if server side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collected_by_server_side_state">
	<documentation>
 Gets the state indicating if server side TCP reports stats to AVR
 even if there is no TCP::analytics iRule.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collected_stats_internal_logging_state">
	<documentation>
 Sets the state indicating if AVR logs TCP stats on the local device.
 The default is enabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collected_stats_internal_logging_state">
	<documentation>
 Gets the state indicating if AVR logs TCP stats on the local device.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collected_stats_external_logging_state">
	<documentation>
 Sets the state indicating if AVR logs TCP stats on an external
 device defined by external_logging_publisher.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collected_stats_external_logging_state">
	<documentation>
 Gets the state indicating if AVR logs TCP stats on an external
 device defined by external_logging_publisher.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_nexthop_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by nexthop ethernet address.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_nexthop_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by nexthop ethernet address.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_continent_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by continent.
 The default is enabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_continent_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by continent.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_region_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by region.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_region_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by region.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_city_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by city.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_city_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by city.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_post_code_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by postcode.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_post_code_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by postcode.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_remote_host_ip_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by remote host IP
 address.
 The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_remote_host_ip_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by remote host IP
 address.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_remote_host_subnet_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by remote host
 subnet.
 The default is enabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_remote_host_subnet_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by remote host
 subnet.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_collect_by_country_state">
	<documentation>
 Sets the state indicating if AVR stores TCP stats by country.
 The default is enabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_collect_by_country_state">
	<documentation>
 Gets the state indicating if AVR stores TCP stats by country.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_log_publisher">
	<documentation>
 Sets the log publishers for a set of TCP Analytics profiles. A log publisher is
 a set of log destinations for high-speed logging of formatted log messages.
 See Log::Publisher for more details.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_log_publisher">
	<documentation>
 Gets the log publishers for a set of TCP Analytics profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for a set of TCP Analytics profiles.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of TCP Analytics profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:LocalLB/ProfileTCPAnalytics"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:LocalLB/ProfileTCPAnalytics"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="LocalLB.ProfileTCPAnalytics">
	<documentation>
 The ProfileTCPAnalytics interface enables you to manipulate a local
 load balancer's TCP Analytics profile. When this profile is attached
 to a virtual, it allows collection of TCP performance statistics on a
 virtual that has a FastL4 or TCP profile if AVR is enabled.

        	</documentation>
	<port name="LocalLB.ProfileTCPAnalyticsPort" binding="tns:LocalLB.ProfileTCPAnalyticsBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
