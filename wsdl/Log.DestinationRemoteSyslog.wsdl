<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Log.DestinationRemoteSyslog"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Log.SyslogLevel">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="LOG_LEVEL_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_EMERG">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_EMERG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_ALERT">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_ALERT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_CRIT">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_CRIT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_ERR">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_ERR</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_WARNING">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_WARNING</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_NOTICE">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_NOTICE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_INFO">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_INFO</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_LEVEL_DEBUG">
					<xsd:annotation>
						<xsd:documentation>LOG_LEVEL_DEBUG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Log.SyslogLevelSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Log.SyslogLevel[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Log.SyslogFacility">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="LOG_FACILITY_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL0">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL0</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL1">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL1</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL2">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL2</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL3">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL3</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL4">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL4</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL5">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL5</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL6">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL6</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FACILITY_LOCAL7">
					<xsd:annotation>
						<xsd:documentation>LOG_FACILITY_LOCAL7</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Log.SyslogFacilitySequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Log.SyslogFacility[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Log.SyslogFormat">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="LOG_FORMAT_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>LOG_FORMAT_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FORMAT_SYSLOG">
					<xsd:annotation>
						<xsd:documentation>LOG_FORMAT_SYSLOG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FORMAT_BSD_SYSLOG">
					<xsd:annotation>
						<xsd:documentation>LOG_FORMAT_BSD_SYSLOG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOG_FORMAT_LEGACY_BIGIP">
					<xsd:annotation>
						<xsd:documentation>LOG_FORMAT_LEGACY_BIGIP</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Log.SyslogFormatSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Log.SyslogFormat[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Log.DestinationRemoteSyslog.get_listRequest">
</message>
<message name="Log.DestinationRemoteSyslog.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.createRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="facilities" type="tns:Log.SyslogFacilitySequence"/>
	<part name="levels" type="tns:Log.SyslogLevelSequence"/>
	<part name="hsl_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.createResponse">
</message>

<message name="Log.DestinationRemoteSyslog.create_v2Request">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="facilities" type="tns:Log.SyslogFacilitySequence"/>
	<part name="levels" type="tns:Log.SyslogLevelSequence"/>
	<part name="forwarding_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.create_v2Response">
</message>

<message name="Log.DestinationRemoteSyslog.delete_remote_syslog_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.delete_remote_syslog_destinationResponse">
</message>

<message name="Log.DestinationRemoteSyslog.delete_all_remote_syslog_destinationsRequest">
</message>
<message name="Log.DestinationRemoteSyslog.delete_all_remote_syslog_destinationsResponse">
</message>

<message name="Log.DestinationRemoteSyslog.set_default_facilityRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="facilities" type="tns:Log.SyslogFacilitySequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_default_facilityResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_default_facilityRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_default_facilityResponse">
	<part name="return" type="tns:Log.SyslogFacilitySequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.set_default_severityRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="levels" type="tns:Log.SyslogLevelSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_default_severityResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_default_severityRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_default_severityResponse">
	<part name="return" type="tns:Log.SyslogLevelSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.set_formatRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="formats" type="tns:Log.SyslogFormatSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_formatResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_formatRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_formatResponse">
	<part name="return" type="tns:Log.SyslogFormatSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.set_remote_high_speed_log_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="hsl_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_remote_high_speed_log_destinationResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_remote_high_speed_log_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_remote_high_speed_log_destinationResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.set_forwarding_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="forwarding_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_forwarding_destinationResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_forwarding_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_forwarding_destinationResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.set_descriptionRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.set_descriptionResponse">
</message>

<message name="Log.DestinationRemoteSyslog.get_descriptionRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationRemoteSyslog.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationRemoteSyslog.get_versionRequest">
</message>
<message name="Log.DestinationRemoteSyslog.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Log.DestinationRemoteSyslogPortType">
	<operation name="get_list">
     	<documentation>
 Gets the list of remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_listRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Note: This method is now deprecated; please use create_v2 instead.
 Creates a remote syslog destination.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.createRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.createResponse"/>
	</operation>
	<operation name="create_v2">
	<documentation>
 Creates a remote syslog destination.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.create_v2Request"/>
		<output message="tns:Log.DestinationRemoteSyslog.create_v2Response"/>
	</operation>
	<operation name="delete_remote_syslog_destination">
	<documentation>
 Deletes the specified remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.delete_remote_syslog_destinationRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.delete_remote_syslog_destinationResponse"/>
	</operation>
	<operation name="delete_all_remote_syslog_destinations">
	<documentation>
 Deletes all remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.delete_all_remote_syslog_destinationsRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.delete_all_remote_syslog_destinationsResponse"/>
	</operation>
	<operation name="set_default_facility">
	<documentation>
 Sets the default facility for the specified remote syslog
 destinations. Syslog messages that come in without a
 facility specified are given the default facility. See
 Log::SyslogFacility for more details.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_default_facilityRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_default_facilityResponse"/>
	</operation>
	<operation name="get_default_facility">
	<documentation>
 Gets the default facility for the specified remote syslog
 destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_default_facilityRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_default_facilityResponse"/>
	</operation>
	<operation name="set_default_severity">
	<documentation>
 Sets the default severity for messages sent to the specified remote
 syslog destinations. The default severity is the severity given to
 syslog messages without a severity given.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_default_severityRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_default_severityResponse"/>
	</operation>
	<operation name="get_default_severity">
	<documentation>
 Gets the default severity for the specified remote syslog
 destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_default_severityRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_default_severityResponse"/>
	</operation>
	<operation name="set_format">
	<documentation>
 Sets the syslog format for the specified remote syslog destinations.
 The format is the format of the syslog messages sent to the remote
 syslog server. See SyslogFormat for more details.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_formatRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_formatResponse"/>
	</operation>
	<operation name="get_format">
	<documentation>
 Gets the formats for the specified remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_formatRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_formatResponse"/>
	</operation>
	<operation name="set_remote_high_speed_log_destination">
	<documentation>
 This method is now deprecated; please use set_forwarding_destination instead.
 Sets the log destination that will be used to forward Syslog formatted
 messages for the specified Remote Syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_remote_high_speed_log_destinationRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_remote_high_speed_log_destinationResponse"/>
	</operation>
	<operation name="get_remote_high_speed_log_destination">
	<documentation>
 This method is now deprecated; please use get_forwarding_destination instead.
 Gets the remote high-speed log destinations for the specified
 remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_remote_high_speed_log_destinationRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_remote_high_speed_log_destinationResponse"/>
	</operation>
	<operation name="set_forwarding_destination">
	<documentation>
 Sets the forwarding log destination for the specifed remote
 syslog destinations. Attempting to forward to another remote
 syslog destination will result in an error.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_forwarding_destinationRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_forwarding_destinationResponse"/>
	</operation>
	<operation name="get_forwarding_destination">
	<documentation>
 Gets the forwarding log destination for the specifed remote
 syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_forwarding_destinationRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_forwarding_destinationResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for the specified remote syslog destinations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.set_descriptionRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for the specified remote syslog destinations.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_descriptionRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_descriptionResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:Log.DestinationRemoteSyslog.get_versionRequest"/>
		<output message="tns:Log.DestinationRemoteSyslog.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Log.DestinationRemoteSyslogBinding" type="tns:Log.DestinationRemoteSyslogPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets the list of remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Note: This method is now deprecated; please use create_v2 instead.
 Creates a remote syslog destination.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create_v2">
	<documentation>
 Creates a remote syslog destination.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_remote_syslog_destination">
	<documentation>
 Deletes the specified remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_remote_syslog_destinations">
	<documentation>
 Deletes all remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_default_facility">
	<documentation>
 Sets the default facility for the specified remote syslog
 destinations. Syslog messages that come in without a
 facility specified are given the default facility. See
 Log::SyslogFacility for more details.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_default_facility">
	<documentation>
 Gets the default facility for the specified remote syslog
 destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_default_severity">
	<documentation>
 Sets the default severity for messages sent to the specified remote
 syslog destinations. The default severity is the severity given to
 syslog messages without a severity given.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_default_severity">
	<documentation>
 Gets the default severity for the specified remote syslog
 destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_format">
	<documentation>
 Sets the syslog format for the specified remote syslog destinations.
 The format is the format of the syslog messages sent to the remote
 syslog server. See SyslogFormat for more details.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_format">
	<documentation>
 Gets the formats for the specified remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_remote_high_speed_log_destination">
	<documentation>
 This method is now deprecated; please use set_forwarding_destination instead.
 Sets the log destination that will be used to forward Syslog formatted
 messages for the specified Remote Syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_remote_high_speed_log_destination">
	<documentation>
 This method is now deprecated; please use get_forwarding_destination instead.
 Gets the remote high-speed log destinations for the specified
 remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_forwarding_destination">
	<documentation>
 Sets the forwarding log destination for the specifed remote
 syslog destinations. Attempting to forward to another remote
 syslog destination will result in an error.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_forwarding_destination">
	<documentation>
 Gets the forwarding log destination for the specifed remote
 syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for the specified remote syslog destinations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for the specified remote syslog destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationRemoteSyslog"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationRemoteSyslog"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Log.DestinationRemoteSyslog">
	<documentation>
 The DestinationRemoteSyslog interface enables you to create and modify
 remote syslog destinations which are forwarding destinations. This
 destination will take unformatted logs and convert them to various syslog
 formats to other forwarding destinations except other remote syslog
 destinations.

        	</documentation>
	<port name="Log.DestinationRemoteSyslogPort" binding="tns:Log.DestinationRemoteSyslogBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
