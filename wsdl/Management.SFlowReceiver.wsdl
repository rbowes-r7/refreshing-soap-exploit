<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Management.SFlowReceiver"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:simpleType name="Common.EnabledState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="STATE_DISABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_DISABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="STATE_ENABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_ENABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.ULongSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.PortSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.IPAddressSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.EnabledStateSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.EnabledState[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Management.SFlowReceiver.get_listRequest">
</message>
<message name="Management.SFlowReceiver.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Management.SFlowReceiver.createRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="addresses" type="tns:Common.IPAddressSequence"/>
</message>
<message name="Management.SFlowReceiver.createResponse">
</message>

<message name="Management.SFlowReceiver.delete_sflow_receiverRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.delete_sflow_receiverResponse">
</message>

<message name="Management.SFlowReceiver.delete_all_sflow_receiversRequest">
</message>
<message name="Management.SFlowReceiver.delete_all_sflow_receiversResponse">
</message>

<message name="Management.SFlowReceiver.set_addressRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="addresses" type="tns:Common.IPAddressSequence"/>
</message>
<message name="Management.SFlowReceiver.set_addressResponse">
</message>

<message name="Management.SFlowReceiver.get_addressRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_addressResponse">
	<part name="return" type="tns:Common.IPAddressSequence"/>
</message>

<message name="Management.SFlowReceiver.set_portRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="ports" type="tns:Common.PortSequence"/>
</message>
<message name="Management.SFlowReceiver.set_portResponse">
</message>

<message name="Management.SFlowReceiver.get_portRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_portResponse">
	<part name="return" type="tns:Common.PortSequence"/>
</message>

<message name="Management.SFlowReceiver.set_maximum_datagram_sizeRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="sizes" type="tns:Common.ULongSequence"/>
</message>
<message name="Management.SFlowReceiver.set_maximum_datagram_sizeResponse">
</message>

<message name="Management.SFlowReceiver.get_maximum_datagram_sizeRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_maximum_datagram_sizeResponse">
	<part name="return" type="tns:Common.ULongSequence"/>
</message>

<message name="Management.SFlowReceiver.get_datagram_versionRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_datagram_versionResponse">
	<part name="return" type="tns:Common.ULongSequence"/>
</message>

<message name="Management.SFlowReceiver.set_enabled_stateRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:Common.EnabledStateSequence"/>
</message>
<message name="Management.SFlowReceiver.set_enabled_stateResponse">
</message>

<message name="Management.SFlowReceiver.get_enabled_stateRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_enabled_stateResponse">
	<part name="return" type="tns:Common.EnabledStateSequence"/>
</message>

<message name="Management.SFlowReceiver.set_descriptionRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.set_descriptionResponse">
</message>

<message name="Management.SFlowReceiver.get_descriptionRequest">
	<part name="receivers" type="tns:Common.StringSequence"/>
</message>
<message name="Management.SFlowReceiver.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Management.SFlowReceiver.get_versionRequest">
</message>
<message name="Management.SFlowReceiver.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Management.SFlowReceiverPortType">
	<operation name="get_list">
	<documentation>
 Gets a list of names for all sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_listRequest"/>
		<output message="tns:Management.SFlowReceiver.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates a set of sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.createRequest"/>
		<output message="tns:Management.SFlowReceiver.createResponse"/>
	</operation>
	<operation name="delete_sflow_receiver">
	<documentation>
 Deletes a set of sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.delete_sflow_receiverRequest"/>
		<output message="tns:Management.SFlowReceiver.delete_sflow_receiverResponse"/>
	</operation>
	<operation name="delete_all_sflow_receivers">
	<documentation>
 Deletes all sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.delete_all_sflow_receiversRequest"/>
		<output message="tns:Management.SFlowReceiver.delete_all_sflow_receiversResponse"/>
	</operation>
	<operation name="set_address">
	<documentation>
 Sets the IP addresses for the specified sFlow receivers. IP
 addresses can be either IPv4 or IPv6.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.set_addressRequest"/>
		<output message="tns:Management.SFlowReceiver.set_addressResponse"/>
	</operation>
	<operation name="get_address">
	<documentation>
 Gets the IP addresses for the specified sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_addressRequest"/>
		<output message="tns:Management.SFlowReceiver.get_addressResponse"/>
	</operation>
	<operation name="set_port">
	<documentation>
 Sets the listening port numbers for the specified sFlow
 receivers. The default is the sFlow standard port 6343.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.set_portRequest"/>
		<output message="tns:Management.SFlowReceiver.set_portResponse"/>
	</operation>
	<operation name="get_port">
	<documentation>
 Gets the listening port numbers for the specified sFlow
 receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_portRequest"/>
		<output message="tns:Management.SFlowReceiver.get_portResponse"/>
	</operation>
	<operation name="set_maximum_datagram_size">
	<documentation>
 Sets the maximum datagram sizes allowed for the specified
 sFlow receivers, from 512 to 1500 inclusive. The default 
 is 1400.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.set_maximum_datagram_sizeRequest"/>
		<output message="tns:Management.SFlowReceiver.set_maximum_datagram_sizeResponse"/>
	</operation>
	<operation name="get_maximum_datagram_size">
	<documentation>
 Gets the maximum datagram sizes allowed for the specified
 sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_maximum_datagram_sizeRequest"/>
		<output message="tns:Management.SFlowReceiver.get_maximum_datagram_sizeResponse"/>
	</operation>
	<operation name="get_datagram_version">
	<documentation>
 Gets the sFlow datagram versions used for the specified
 sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_datagram_versionRequest"/>
		<output message="tns:Management.SFlowReceiver.get_datagram_versionResponse"/>
	</operation>
	<operation name="set_enabled_state">
	<documentation>
 Sets the states for the specified sFlow receivers to
 enabled or disabled. The default is disabled.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.set_enabled_stateRequest"/>
		<output message="tns:Management.SFlowReceiver.set_enabled_stateResponse"/>
	</operation>
	<operation name="get_enabled_state">
	<documentation>
 Gets the states for the specified sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_enabled_stateRequest"/>
		<output message="tns:Management.SFlowReceiver.get_enabled_stateResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the descriptions for the specified sFlow receivers.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.set_descriptionRequest"/>
		<output message="tns:Management.SFlowReceiver.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for the specified sFlow receivers.

        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_descriptionRequest"/>
		<output message="tns:Management.SFlowReceiver.get_descriptionResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.
 
        	</documentation>
		<input message="tns:Management.SFlowReceiver.get_versionRequest"/>
		<output message="tns:Management.SFlowReceiver.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Management.SFlowReceiverBinding" type="tns:Management.SFlowReceiverPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets a list of names for all sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates a set of sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_sflow_receiver">
	<documentation>
 Deletes a set of sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_sflow_receivers">
	<documentation>
 Deletes all sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_address">
	<documentation>
 Sets the IP addresses for the specified sFlow receivers. IP
 addresses can be either IPv4 or IPv6.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_address">
	<documentation>
 Gets the IP addresses for the specified sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_port">
	<documentation>
 Sets the listening port numbers for the specified sFlow
 receivers. The default is the sFlow standard port 6343.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_port">
	<documentation>
 Gets the listening port numbers for the specified sFlow
 receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_maximum_datagram_size">
	<documentation>
 Sets the maximum datagram sizes allowed for the specified
 sFlow receivers, from 512 to 1500 inclusive. The default 
 is 1400.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_maximum_datagram_size">
	<documentation>
 Gets the maximum datagram sizes allowed for the specified
 sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_datagram_version">
	<documentation>
 Gets the sFlow datagram versions used for the specified
 sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_enabled_state">
	<documentation>
 Sets the states for the specified sFlow receivers to
 enabled or disabled. The default is disabled.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_enabled_state">
	<documentation>
 Gets the states for the specified sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the descriptions for the specified sFlow receivers.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for the specified sFlow receivers.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/SFlowReceiver"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/SFlowReceiver"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Management.SFlowReceiver">
	<documentation>
 The SFlowReceiver interface contains the methods for creating and
 manipulating the sFlow receiver. It allows you to configure one or 
 more sFlow receivers, by providing the IPv4 or IPv6 address and port 
 on which they are listening, along with the maximum datagram size 
 they support and their current state (enabled or disabled). One or 
 more data sources can be selected to monitor for counter/packet-flow 
 sampling. Data samples would start to flow to the offline receivers 
 after you enable them.

 The sFlow monitoring standard has two major components: Packet Flow
 Sampling, a random selection of a fraction of the Packet Flows
 observed at a data source, and Counter Sampling, a periodic
 sampling or polling of counters associated with a data source. 
 Data samples are sent out, as soon as they are taken, with at most 
 a second of intentional delay, to offline sFlow receivers, through 
 UDP datagrams. It is the responsibility of the receivers to maintain 
 the collected data, in any proprietary format. sFlow analyzers, 
 which understand the receivers or their storage format, could be 
 used to analyze the collected data, to represent network usage, over 
 a period of time. Thus, the collected data can be used to analyze 
 the BIG-IP system performance.

        	</documentation>
	<port name="Management.SFlowReceiverPort" binding="tns:Management.SFlowReceiverBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
