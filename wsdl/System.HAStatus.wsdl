<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="System.HAStatus"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="Common.HAActionSequenceSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.HAActionSequence[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="System.HAStatus.EntryID">
			<xsd:sequence>
				<xsd:element name="ha_feature" type="tns:System.HAStatus.Feature"/>
				<xsd:element name="ha_key" type="xsd:string"/>
				<xsd:element name="slot" type="xsd:long"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="Common.ULongSequenceSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.ULongSequence[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="System.HAStatus.EntryIDSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:System.HAStatus.EntryID[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Common.EnabledState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="STATE_DISABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_DISABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="STATE_ENABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_ENABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.BooleanSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.ULongSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="System.HAStatus.Feature">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="FEATURE_ASM_CONFIGURATION">
					<xsd:annotation>
						<xsd:documentation>FEATURE_ASM_CONFIGURATION</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_CLUSTER_MEMBER">
					<xsd:annotation>
						<xsd:documentation>FEATURE_CLUSTER_MEMBER</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_CLUSTER_MIN_UP_MEMBERS">
					<xsd:annotation>
						<xsd:documentation>FEATURE_CLUSTER_MIN_UP_MEMBERS</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_CLUSTER_TIME_SYNC">
					<xsd:annotation>
						<xsd:documentation>FEATURE_CLUSTER_TIME_SYNC</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_DAEMON">
					<xsd:annotation>
						<xsd:documentation>FEATURE_DAEMON</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_DAEMON_HEARTBEAT">
					<xsd:annotation>
						<xsd:documentation>FEATURE_DAEMON_HEARTBEAT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_FIPS">
					<xsd:annotation>
						<xsd:documentation>FEATURE_FIPS</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_FORCED_OFFLINE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_FORCED_OFFLINE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_GROUP_SCORE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_GROUP_SCORE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_HARDWARE_FAILOVER">
					<xsd:annotation>
						<xsd:documentation>FEATURE_HARDWARE_FAILOVER</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_HSB">
					<xsd:annotation>
						<xsd:documentation>FEATURE_HSB</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_LICENSE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_LICENSE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_MPI">
					<xsd:annotation>
						<xsd:documentation>FEATURE_MPI</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_MYSQL">
					<xsd:annotation>
						<xsd:documentation>FEATURE_MYSQL</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_NETWORK_FAILOVER">
					<xsd:annotation>
						<xsd:documentation>FEATURE_NETWORK_FAILOVER</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_OVERDOG">
					<xsd:annotation>
						<xsd:documentation>FEATURE_OVERDOG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_PEER_GROUP_SCORE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_PEER_GROUP_SCORE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_POOL_MIN_UP_MEMBERS">
					<xsd:annotation>
						<xsd:documentation>FEATURE_POOL_MIN_UP_MEMBERS</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_REBOOT">
					<xsd:annotation>
						<xsd:documentation>FEATURE_REBOOT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_SECONDARY_SOD">
					<xsd:annotation>
						<xsd:documentation>FEATURE_SECONDARY_SOD</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_SOD_CONFIGURATION">
					<xsd:annotation>
						<xsd:documentation>FEATURE_SOD_CONFIGURATION</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_SOFTWARE_UPDATE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_SOFTWARE_UPDATE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_SWITCHBOARD">
					<xsd:annotation>
						<xsd:documentation>FEATURE_SWITCHBOARD</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_TMM_DETECTED">
					<xsd:annotation>
						<xsd:documentation>FEATURE_TMM_DETECTED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_TMM_READY">
					<xsd:annotation>
						<xsd:documentation>FEATURE_TMM_READY</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>FEATURE_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_VLAN">
					<xsd:annotation>
						<xsd:documentation>FEATURE_VLAN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_HYPERVISOR_OFFLINE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_HYPERVISOR_OFFLINE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_COMPRESSION_FAILSAFE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_COMPRESSION_FAILSAFE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FEATURE_CRYPTO_FAILSAFE">
					<xsd:annotation>
						<xsd:documentation>FEATURE_CRYPTO_FAILSAFE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="System.HAStatus.EntryIDSequenceSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:System.HAStatus.EntryIDSequence[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Common.HAAction">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="HA_ACTION_NONE">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_NONE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_REBOOT">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_REBOOT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_RESTART">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_RESTART</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_FAILOVER">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_FAILOVER</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_FAILOVER_RESTART">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_FAILOVER_RESTART</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_ACTIVE">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_ACTIVE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_RESTART_ALL">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_RESTART_ALL</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_FAILOVER_ABORT_TRAFFIC_MGT">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_FAILOVER_ABORT_TRAFFIC_MGT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_OFFLINE">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_OFFLINE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_OFFLINE_RESTART">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_OFFLINE_RESTART</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_OFFLINE_ABORT_TM">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_OFFLINE_ABORT_TM</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_OFFLINE_DOWNLINKS">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_OFFLINE_DOWNLINKS</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="HA_ACTION_GO_OFFLINE_DOWNLINKS_RESTART">
					<xsd:annotation>
						<xsd:documentation>HA_ACTION_GO_OFFLINE_DOWNLINKS_RESTART</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.HAActionSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.HAAction[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.EnabledStateSequenceSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.EnabledStateSequence[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.EnabledStateSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.EnabledState[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="System.HAStatus.get_entryRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
</message>
<message name="System.HAStatus.get_entryResponse">
	<part name="return" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_actionRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_actionResponse">
	<part name="return" type="tns:Common.HAActionSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_action_required_stateRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_action_required_stateResponse">
	<part name="return" type="tns:Common.EnabledStateSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_dataRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_dataResponse">
	<part name="return" type="tns:Common.ULongSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_enabled_stateRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_enabled_stateResponse">
	<part name="return" type="tns:Common.EnabledStateSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_failure_stateRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_failure_stateResponse">
	<part name="return" type="tns:Common.EnabledStateSequenceSequence"/>
</message>

<message name="System.HAStatus.get_entry_timeoutRequest">
	<part name="peers" type="tns:Common.BooleanSequence"/>
	<part name="ids" type="tns:System.HAStatus.EntryIDSequenceSequence"/>
</message>
<message name="System.HAStatus.get_entry_timeoutResponse">
	<part name="return" type="tns:Common.ULongSequenceSequence"/>
</message>

<message name="System.HAStatus.get_versionRequest">
</message>
<message name="System.HAStatus.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="System.HAStatusPortType">
	<operation name="get_entry">
 	<documentation>
 Gets the identifiers of all table entries for a set of High
 Availability status tables

        	</documentation>
		<input message="tns:System.HAStatus.get_entryRequest"/>
		<output message="tns:System.HAStatus.get_entryResponse"/>
	</operation>
	<operation name="get_entry_action">
	<documentation>
 Gets the action that should be taken when the "action required"
 state is set for a set of table entries.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_actionRequest"/>
		<output message="tns:System.HAStatus.get_entry_actionResponse"/>
	</operation>
	<operation name="get_entry_action_required_state">
	<documentation>
 Gets the state to take action to resolve the high availability
 feature failure for a set of table entries.

 For example, if the VLAN failsafe feature determined that the VLAN
 had failed, it would set this to yes, which would cause the daemon
 to execute the action assigned to the feature, such as rebooting
 the system.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_action_required_stateRequest"/>
		<output message="tns:System.HAStatus.get_entry_action_required_stateResponse"/>
	</operation>
	<operation name="get_entry_data">
	<documentation>
 Gets the feature-specific data for a set of table entries.

 The meaning of this value varies according to the feature.  For
 daemon heartbeats, for example, this value shows the daemon's
 current heartbeat value.  This is documented with the feature
 enumeration values.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_dataRequest"/>
		<output message="tns:System.HAStatus.get_entry_dataResponse"/>
	</operation>
	<operation name="get_entry_enabled_state">
	<documentation>
 Gets the state to enable the high availability feature for a set of
 table entries.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_enabled_stateRequest"/>
		<output message="tns:System.HAStatus.get_entry_enabled_stateResponse"/>
	</operation>
	<operation name="get_entry_failure_state">
	<documentation>
 Gets the state to signal a high availability failure for a set of
 table entries.

 For a properly fully functioning system, no feature should set
 "failure".  Thus retrieving a list of features with this flag set
  will quickly show any high availability problems on the system.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_failure_stateRequest"/>
		<output message="tns:System.HAStatus.get_entry_failure_stateResponse"/>
	</operation>
	<operation name="get_entry_timeout">
	<documentation>
 Gets the timeout for a set of table entries.

 The precise meaning of this value varies according to the feature,
 but in general, it is the elapsed time between when the feature's
 error state is detected and when the corresponding action is taken.

        	</documentation>
		<input message="tns:System.HAStatus.get_entry_timeoutRequest"/>
		<output message="tns:System.HAStatus.get_entry_timeoutResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:System.HAStatus.get_versionRequest"/>
		<output message="tns:System.HAStatus.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="System.HAStatusBinding" type="tns:System.HAStatusPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_entry">
	<documentation>
 Gets the identifiers of all table entries for a set of High
 Availability status tables

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_action">
	<documentation>
 Gets the action that should be taken when the "action required"
 state is set for a set of table entries.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_action_required_state">
	<documentation>
 Gets the state to take action to resolve the high availability
 feature failure for a set of table entries.

 For example, if the VLAN failsafe feature determined that the VLAN
 had failed, it would set this to yes, which would cause the daemon
 to execute the action assigned to the feature, such as rebooting
 the system.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_data">
	<documentation>
 Gets the feature-specific data for a set of table entries.

 The meaning of this value varies according to the feature.  For
 daemon heartbeats, for example, this value shows the daemon's
 current heartbeat value.  This is documented with the feature
 enumeration values.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_enabled_state">
	<documentation>
 Gets the state to enable the high availability feature for a set of
 table entries.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_failure_state">
	<documentation>
 Gets the state to signal a high availability failure for a set of
 table entries.

 For a properly fully functioning system, no feature should set
 "failure".  Thus retrieving a list of features with this flag set
  will quickly show any high availability problems on the system.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_entry_timeout">
	<documentation>
 Gets the timeout for a set of table entries.

 The precise meaning of this value varies according to the feature,
 but in general, it is the elapsed time between when the feature's
 error state is detected and when the corresponding action is taken.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/HAStatus"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/HAStatus"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="System.HAStatus">
	<documentation>
 The High Availability (HA) status table is a one-stop destination to
 retrieve the current status of the high availability features on either
 the current system or its redundant peer system. The table holds an
 entry for each feature active on the system.

 It is important to note that this table can only be read. Enabling and
 controlling these features is possible through other interfaces, as
 documented in the Feature enumeration values.

        	</documentation>
	<port name="System.HAStatusPort" binding="tns:System.HAStatusBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
