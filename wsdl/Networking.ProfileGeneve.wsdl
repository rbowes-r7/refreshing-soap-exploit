<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Networking.ProfileGeneve"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="Networking.ProfileGeneve.ProfileGeneveFloodingTypeSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Networking.ProfileGeneve.ProfileGeneveFloodingType[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.ProfilePortNumberSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.ProfilePortNumber[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.BooleanSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Networking.ProfileGeneve.ProfileGeneveFloodingType">
			<xsd:sequence>
				<xsd:element name="value" type="tns:Networking.ProfileGeneve.GeneveFloodingType"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:simpleType name="Networking.ProfileGeneve.GeneveFloodingType">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="PROFILE_GENEVE_FLOODING_TYPE_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>PROFILE_GENEVE_FLOODING_TYPE_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="PROFILE_GENEVE_FLOODING_TYPE_NONE">
					<xsd:annotation>
						<xsd:documentation>PROFILE_GENEVE_FLOODING_TYPE_NONE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="PROFILE_GENEVE_FLOODING_TYPE_MULTICAST">
					<xsd:annotation>
						<xsd:documentation>PROFILE_GENEVE_FLOODING_TYPE_MULTICAST</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="PROFILE_GENEVE_FLOODING_TYPE_MULTIPOINT">
					<xsd:annotation>
						<xsd:documentation>PROFILE_GENEVE_FLOODING_TYPE_MULTIPOINT</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.ProfilePortNumber">
			<xsd:sequence>
				<xsd:element name="value" type="xsd:long"/>
				<xsd:element name="default_flag" type="xsd:boolean"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Networking.ProfileGeneve.get_listRequest">
</message>
<message name="Networking.ProfileGeneve.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileGeneve.createRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.createResponse">
</message>

<message name="Networking.ProfileGeneve.delete_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.delete_profileResponse">
</message>

<message name="Networking.ProfileGeneve.delete_all_profilesRequest">
</message>
<message name="Networking.ProfileGeneve.delete_all_profilesResponse">
</message>

<message name="Networking.ProfileGeneve.is_base_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.is_base_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="Networking.ProfileGeneve.is_system_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.is_system_profileResponse">
	<part name="return" type="tns:Common.BooleanSequence"/>
</message>

<message name="Networking.ProfileGeneve.set_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="defaults" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.set_default_profileResponse">
</message>

<message name="Networking.ProfileGeneve.get_default_profileRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.get_default_profileResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileGeneve.set_portRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="ports" type="tns:Common.ProfilePortNumberSequence"/>
</message>
<message name="Networking.ProfileGeneve.set_portResponse">
</message>

<message name="Networking.ProfileGeneve.get_portRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.get_portResponse">
	<part name="return" type="tns:Common.ProfilePortNumberSequence"/>
</message>

<message name="Networking.ProfileGeneve.set_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.set_descriptionResponse">
</message>

<message name="Networking.ProfileGeneve.get_descriptionRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Networking.ProfileGeneve.set_flooding_typeRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
	<part name="flooding_types" type="tns:Networking.ProfileGeneve.ProfileGeneveFloodingTypeSequence"/>
</message>
<message name="Networking.ProfileGeneve.set_flooding_typeResponse">
</message>

<message name="Networking.ProfileGeneve.get_flooding_typeRequest">
	<part name="profile_names" type="tns:Common.StringSequence"/>
</message>
<message name="Networking.ProfileGeneve.get_flooding_typeResponse">
	<part name="return" type="tns:Networking.ProfileGeneve.ProfileGeneveFloodingTypeSequence"/>
</message>

<message name="Networking.ProfileGeneve.get_versionRequest">
</message>
<message name="Networking.ProfileGeneve.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Networking.ProfileGenevePortType">
	<operation name="get_list">
	<documentation>
 Gets the names for all Geneve tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_listRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates a set of Geneve tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.createRequest"/>
		<output message="tns:Networking.ProfileGeneve.createResponse"/>
	</operation>
	<operation name="delete_profile">
	<documentation>
 Deletes a set of Geneve tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.delete_profileRequest"/>
		<output message="tns:Networking.ProfileGeneve.delete_profileResponse"/>
	</operation>
	<operation name="delete_all_profiles">
	<documentation>
 Deletes all non-system Geneve tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.delete_all_profilesRequest"/>
		<output message="tns:Networking.ProfileGeneve.delete_all_profilesResponse"/>
	</operation>
	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified Geneve tunnel profiles are base
 profiles.  A base profile sits at the base of the profile's
 inheritance tree, supplying the defaults for every profile derived
 from it.  (See also is_system_profile).

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.is_base_profileRequest"/>
		<output message="tns:Networking.ProfileGeneve.is_base_profileResponse"/>
	</operation>
	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified Geneve tunnel profiles are
 system profiles. A system profile is a profile pre-configured on
 the system, ready for use. Non-system profiles are profiles
 created or modified by a user. Note that if a system profile is
 modified, it is no longer considered a system profile. (See also
 is_base_profile).

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.is_system_profileRequest"/>
		<output message="tns:Networking.ProfileGeneve.is_system_profileResponse"/>
	</operation>
	<operation name="set_default_profile">
	<documentation>
 Sets an existing Geneve tunnel profile as the default profile from
 which this set of Geneve tunnel profiles inherits their default
 attribute values.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.set_default_profileRequest"/>
		<output message="tns:Networking.ProfileGeneve.set_default_profileResponse"/>
	</operation>
	<operation name="get_default_profile">
	<documentation>
 Gets the Geneve tunnel profile that is assigned as the default
 profile from which this set of Geneve tunnel profiles inherits
 its unspecified attribute values.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_default_profileRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_default_profileResponse"/>
	</operation>
	<operation name="set_port">
	<documentation>
 Sets the local port for receiving Geneve packets for a set of Geneve
 tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.set_portRequest"/>
		<output message="tns:Networking.ProfileGeneve.set_portResponse"/>
	</operation>
	<operation name="get_port">
	<documentation>
 Gets the local port for receiving Geneve packets for a set of Geneve
 tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_portRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_portResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for a set of Geneve tunnel profiles.

 This is an arbitrary field which can be used to describe the Geneve
   tunnel profile. This can be used for any purpose.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.set_descriptionRequest"/>
		<output message="tns:Networking.ProfileGeneve.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of Geneve tunnel profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_descriptionRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_descriptionResponse"/>
	</operation>
	<operation name="set_flooding_type">
	<documentation>
 Sets the flooding type to use to transmit multicast, broadcast and
 unknown destination frames. The default is
 PROFILE_GENEVE_FLOODING_TYPE_MULTICAST.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.set_flooding_typeRequest"/>
		<output message="tns:Networking.ProfileGeneve.set_flooding_typeResponse"/>
	</operation>
	<operation name="get_flooding_type">
	<documentation>
 Gets the flooding type for the specified Geneve profiles.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_flooding_typeRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_flooding_typeResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:Networking.ProfileGeneve.get_versionRequest"/>
		<output message="tns:Networking.ProfileGeneve.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Networking.ProfileGeneveBinding" type="tns:Networking.ProfileGenevePortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets the names for all Geneve tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates a set of Geneve tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_profile">
	<documentation>
 Deletes a set of Geneve tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_profiles">
	<documentation>
 Deletes all non-system Geneve tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_base_profile">
	<documentation>
 Determines whether the specified Geneve tunnel profiles are base
 profiles.  A base profile sits at the base of the profile's
 inheritance tree, supplying the defaults for every profile derived
 from it.  (See also is_system_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="is_system_profile">
	<documentation>
 Determines whether the specified Geneve tunnel profiles are
 system profiles. A system profile is a profile pre-configured on
 the system, ready for use. Non-system profiles are profiles
 created or modified by a user. Note that if a system profile is
 modified, it is no longer considered a system profile. (See also
 is_base_profile).

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_default_profile">
	<documentation>
 Sets an existing Geneve tunnel profile as the default profile from
 which this set of Geneve tunnel profiles inherits their default
 attribute values.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_default_profile">
	<documentation>
 Gets the Geneve tunnel profile that is assigned as the default
 profile from which this set of Geneve tunnel profiles inherits
 its unspecified attribute values.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_port">
	<documentation>
 Sets the local port for receiving Geneve packets for a set of Geneve
 tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_port">
	<documentation>
 Gets the local port for receiving Geneve packets for a set of Geneve
 tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for a set of Geneve tunnel profiles.

 This is an arbitrary field which can be used to describe the Geneve
   tunnel profile. This can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of Geneve tunnel profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_flooding_type">
	<documentation>
 Sets the flooding type to use to transmit multicast, broadcast and
 unknown destination frames. The default is
 PROFILE_GENEVE_FLOODING_TYPE_MULTICAST.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_flooding_type">
	<documentation>
 Gets the flooding type for the specified Geneve profiles.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Networking/ProfileGeneve"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Networking/ProfileGeneve"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Networking.ProfileGeneve">
	<documentation>
 The ProfileGeneve interface allows you to manipulate a Geneve tunnel
 profile to configure a Geneve gateway.  A Geneve gateway provides the
 ability to bridge between a traditional VLAN and a Geneve or NVGRE
 network.

        	</documentation>
	<port name="Networking.ProfileGenevePort" binding="tns:Networking.ProfileGeneveBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
