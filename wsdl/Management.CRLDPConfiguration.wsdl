<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Management.CRLDPConfiguration"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:simpleType name="Common.EnabledState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="STATE_DISABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_DISABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="STATE_ENABLED">
					<xsd:annotation>
						<xsd:documentation>STATE_ENABLED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.ULongSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.StringSequenceSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.StringSequence[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.EnabledStateSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:Common.EnabledState[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Management.CRLDPConfiguration.get_listRequest">
</message>
<message name="Management.CRLDPConfiguration.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Management.CRLDPConfiguration.createRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="servers" type="tns:Common.StringSequenceSequence"/>
</message>
<message name="Management.CRLDPConfiguration.createResponse">
</message>

<message name="Management.CRLDPConfiguration.delete_configurationRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.delete_configurationResponse">
</message>

<message name="Management.CRLDPConfiguration.delete_all_configurationsRequest">
</message>
<message name="Management.CRLDPConfiguration.delete_all_configurationsResponse">
</message>

<message name="Management.CRLDPConfiguration.set_use_issuer_stateRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="states" type="tns:Common.EnabledStateSequence"/>
</message>
<message name="Management.CRLDPConfiguration.set_use_issuer_stateResponse">
</message>

<message name="Management.CRLDPConfiguration.get_use_issuer_stateRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_use_issuer_stateResponse">
	<part name="return" type="tns:Common.EnabledStateSequence"/>
</message>

<message name="Management.CRLDPConfiguration.set_connection_timeoutRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="timeouts" type="tns:Common.ULongSequence"/>
</message>
<message name="Management.CRLDPConfiguration.set_connection_timeoutResponse">
</message>

<message name="Management.CRLDPConfiguration.get_connection_timeoutRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_connection_timeoutResponse">
	<part name="return" type="tns:Common.ULongSequence"/>
</message>

<message name="Management.CRLDPConfiguration.set_update_intervalRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="intervals" type="tns:Common.ULongSequence"/>
</message>
<message name="Management.CRLDPConfiguration.set_update_intervalResponse">
</message>

<message name="Management.CRLDPConfiguration.get_update_intervalRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_update_intervalResponse">
	<part name="return" type="tns:Common.ULongSequence"/>
</message>

<message name="Management.CRLDPConfiguration.set_cache_timeoutRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="timeouts" type="tns:Common.ULongSequence"/>
</message>
<message name="Management.CRLDPConfiguration.set_cache_timeoutResponse">
</message>

<message name="Management.CRLDPConfiguration.get_cache_timeoutRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_cache_timeoutResponse">
	<part name="return" type="tns:Common.ULongSequence"/>
</message>

<message name="Management.CRLDPConfiguration.get_serverRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_serverResponse">
	<part name="return" type="tns:Common.StringSequenceSequence"/>
</message>

<message name="Management.CRLDPConfiguration.add_serverRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="servers" type="tns:Common.StringSequenceSequence"/>
</message>
<message name="Management.CRLDPConfiguration.add_serverResponse">
</message>

<message name="Management.CRLDPConfiguration.remove_serverRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="servers" type="tns:Common.StringSequenceSequence"/>
</message>
<message name="Management.CRLDPConfiguration.remove_serverResponse">
</message>

<message name="Management.CRLDPConfiguration.remove_all_serversRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.remove_all_serversResponse">
</message>

<message name="Management.CRLDPConfiguration.set_descriptionRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.set_descriptionResponse">
</message>

<message name="Management.CRLDPConfiguration.get_descriptionRequest">
	<part name="config_names" type="tns:Common.StringSequence"/>
</message>
<message name="Management.CRLDPConfiguration.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Management.CRLDPConfiguration.get_versionRequest">
</message>
<message name="Management.CRLDPConfiguration.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Management.CRLDPConfigurationPortType">
	<operation name="get_list">
   	<documentation>
 Gets a list of all CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_listRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates the specified CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.createRequest"/>
		<output message="tns:Management.CRLDPConfiguration.createResponse"/>
	</operation>
	<operation name="delete_configuration">
	<documentation>
 Deletes the specified CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.delete_configurationRequest"/>
		<output message="tns:Management.CRLDPConfiguration.delete_configurationResponse"/>
	</operation>
	<operation name="delete_all_configurations">
	<documentation>
 Deletes all CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.delete_all_configurationsRequest"/>
		<output message="tns:Management.CRLDPConfiguration.delete_all_configurationsResponse"/>
	</operation>
	<operation name="set_use_issuer_state">
	<documentation>
 Sets the states indicating whether to reuse the issuer.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.set_use_issuer_stateRequest"/>
		<output message="tns:Management.CRLDPConfiguration.set_use_issuer_stateResponse"/>
	</operation>
	<operation name="get_use_issuer_state">
	<documentation>
 Gets the states indicating whether reuse the issuer.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_use_issuer_stateRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_use_issuer_stateResponse"/>
	</operation>
	<operation name="set_connection_timeout">
	<documentation>
 Sets the number of seconds to wait for server's response before concluding that
 the server is down.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.set_connection_timeoutRequest"/>
		<output message="tns:Management.CRLDPConfiguration.set_connection_timeoutResponse"/>
	</operation>
	<operation name="get_connection_timeout">
	<documentation>
 Gets the number of seconds to wait for server's response before concluding that
 the server is down.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_connection_timeoutRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_connection_timeoutResponse"/>
	</operation>
	<operation name="set_update_interval">
	<documentation>
 Sets the number of seconds to wait between updates.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.set_update_intervalRequest"/>
		<output message="tns:Management.CRLDPConfiguration.set_update_intervalResponse"/>
	</operation>
	<operation name="get_update_interval">
	<documentation>
 Gets the number of seconds to wait between updates.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_update_intervalRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_update_intervalResponse"/>
	</operation>
	<operation name="set_cache_timeout">
	<documentation>
 Sets the number of seconds before a CRL entry expires and
 is deleted from the CRL cache.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.set_cache_timeoutRequest"/>
		<output message="tns:Management.CRLDPConfiguration.set_cache_timeoutResponse"/>
	</operation>
	<operation name="get_cache_timeout">
	<documentation>
 Gets the number of seconds before a CRL entry expires and
 is deleted from the CRL cache.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_cache_timeoutRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_cache_timeoutResponse"/>
	</operation>
	<operation name="get_server">
	<documentation>
 Gets the lists of servers the specified CRLDP configurations are associated with.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_serverRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_serverResponse"/>
	</operation>
	<operation name="add_server">
	<documentation>
 Adds/associates servers to the specified CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.add_serverRequest"/>
		<output message="tns:Management.CRLDPConfiguration.add_serverResponse"/>
	</operation>
	<operation name="remove_server">
	<documentation>
 Removes servers from the specified CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.remove_serverRequest"/>
		<output message="tns:Management.CRLDPConfiguration.remove_serverResponse"/>
	</operation>
	<operation name="remove_all_servers">
	<documentation>
 Removes all servers from the specified CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.remove_all_serversRequest"/>
		<output message="tns:Management.CRLDPConfiguration.remove_all_serversResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for a set of CRLDP configurations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.set_descriptionRequest"/>
		<output message="tns:Management.CRLDPConfiguration.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of CRLDP configurations.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_descriptionRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_descriptionResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:Management.CRLDPConfiguration.get_versionRequest"/>
		<output message="tns:Management.CRLDPConfiguration.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Management.CRLDPConfigurationBinding" type="tns:Management.CRLDPConfigurationPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets a list of all CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates the specified CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_configuration">
	<documentation>
 Deletes the specified CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_configurations">
	<documentation>
 Deletes all CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_use_issuer_state">
	<documentation>
 Sets the states indicating whether to reuse the issuer.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_use_issuer_state">
	<documentation>
 Gets the states indicating whether reuse the issuer.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_connection_timeout">
	<documentation>
 Sets the number of seconds to wait for server's response before concluding that
 the server is down.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_connection_timeout">
	<documentation>
 Gets the number of seconds to wait for server's response before concluding that
 the server is down.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_update_interval">
	<documentation>
 Sets the number of seconds to wait between updates.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_update_interval">
	<documentation>
 Gets the number of seconds to wait between updates.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_cache_timeout">
	<documentation>
 Sets the number of seconds before a CRL entry expires and
 is deleted from the CRL cache.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_cache_timeout">
	<documentation>
 Gets the number of seconds before a CRL entry expires and
 is deleted from the CRL cache.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_server">
	<documentation>
 Gets the lists of servers the specified CRLDP configurations are associated with.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="add_server">
	<documentation>
 Adds/associates servers to the specified CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="remove_server">
	<documentation>
 Removes servers from the specified CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="remove_all_servers">
	<documentation>
 Removes all servers from the specified CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for a set of CRLDP configurations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the descriptions for a set of CRLDP configurations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Management/CRLDPConfiguration"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Management/CRLDPConfiguration"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Management.CRLDPConfiguration">
	<documentation>
 The CRLDPConfiguration interface enables you to manage CRLDP PAM configuration.

        	</documentation>
	<port name="Management.CRLDPConfigurationPort" binding="tns:Management.CRLDPConfigurationBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
