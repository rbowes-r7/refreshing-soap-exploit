<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="System.Failover"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:simpleType name="System.Failover.FailoverMode">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="FAILOVER_MODE_ACTIVE_ACTIVE">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_MODE_ACTIVE_ACTIVE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FAILOVER_MODE_ACTIVE_STANDBY">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_MODE_ACTIVE_STANDBY</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="Common.IPAddressSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="System.Failover.FailoverState">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="FAILOVER_STATE_STANDBY">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_STATE_STANDBY</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FAILOVER_STATE_ACTIVE">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_STATE_ACTIVE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FAILOVER_STATE_FORCED_OFFLINE">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_STATE_FORCED_OFFLINE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FAILOVER_STATE_OFFLINE">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_STATE_OFFLINE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FAILOVER_STATE_UNKNOWN">
					<xsd:annotation>
						<xsd:documentation>FAILOVER_STATE_UNKNOWN</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:schema>
</types>

<!-- message -->

<message name="System.Failover.is_redundantRequest">
</message>
<message name="System.Failover.is_redundantResponse">
	<part name="return" type="xsd:boolean"/>
</message>

<message name="System.Failover.get_failover_modeRequest">
</message>
<message name="System.Failover.get_failover_modeResponse">
	<part name="return" type="tns:System.Failover.FailoverMode"/>
</message>

<message name="System.Failover.get_peer_addressRequest">
</message>
<message name="System.Failover.get_peer_addressResponse">
	<part name="return" type="tns:Common.IPAddressSequence"/>
</message>

<message name="System.Failover.get_failover_stateRequest">
</message>
<message name="System.Failover.get_failover_stateResponse">
	<part name="return" type="tns:System.Failover.FailoverState"/>
</message>

<message name="System.Failover.set_standbyRequest">
</message>
<message name="System.Failover.set_standbyResponse">
</message>

<message name="System.Failover.set_standby_to_deviceRequest">
	<part name="device" type="xsd:string"/>
</message>
<message name="System.Failover.set_standby_to_deviceResponse">
</message>

<message name="System.Failover.set_standby_traffic_groupRequest">
	<part name="traffic_groups" type="tns:Common.StringSequence"/>
</message>
<message name="System.Failover.set_standby_traffic_groupResponse">
</message>

<message name="System.Failover.set_standby_traffic_group_to_deviceRequest">
	<part name="traffic_groups" type="tns:Common.StringSequence"/>
	<part name="device" type="xsd:string"/>
</message>
<message name="System.Failover.set_standby_traffic_group_to_deviceResponse">
</message>

<message name="System.Failover.set_offlineRequest">
</message>
<message name="System.Failover.set_offlineResponse">
</message>

<message name="System.Failover.set_offline_releaseRequest">
</message>
<message name="System.Failover.set_offline_releaseResponse">
</message>

<message name="System.Failover.set_failbackRequest">
</message>
<message name="System.Failover.set_failbackResponse">
</message>

<message name="System.Failover.get_versionRequest">
</message>
<message name="System.Failover.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="System.FailoverPortType">
	<operation name="is_redundant">
 	<documentation>
 Checks to see if this device is part of a redundant pair.

        	</documentation>
		<input message="tns:System.Failover.is_redundantRequest"/>
		<output message="tns:System.Failover.is_redundantResponse"/>
	</operation>
	<operation name="get_failover_mode">
	<documentation>
 Gets the current fail-over mode that the device is running in.

        	</documentation>
		<input message="tns:System.Failover.get_failover_modeRequest"/>
		<output message="tns:System.Failover.get_failover_modeResponse"/>
	</operation>
	<operation name="get_peer_address">
	<documentation>
 *IMPORTANT* This method has been deprecated immediately. As of
 version 13.0.0, use Management.Device.get_configsync_address instead.

 Gets the peer IP address(es) in a redundant pair.  There will be a primary
 address and possibly a secondary address.  The primary will be the first
 entry in the returned list.

        	</documentation>
		<input message="tns:System.Failover.get_peer_addressRequest"/>
		<output message="tns:System.Failover.get_peer_addressResponse"/>
	</operation>
	<operation name="get_failover_state">
	<documentation>
 Gets the current fail-over state that the device is running in.

        	</documentation>
		<input message="tns:System.Failover.get_failover_stateRequest"/>
		<output message="tns:System.Failover.get_failover_stateResponse"/>
	</operation>
	<operation name="set_standby">
	<documentation>
 Sets the device to standby mode.

        	</documentation>
		<input message="tns:System.Failover.set_standbyRequest"/>
		<output message="tns:System.Failover.set_standbyResponse"/>
	</operation>
	<operation name="set_standby_to_device">
	<documentation>
 Sets the device to standby mode for all traffic groups and
 requests the specified device to become active for 
 all traffic groups.

        	</documentation>
		<input message="tns:System.Failover.set_standby_to_deviceRequest"/>
		<output message="tns:System.Failover.set_standby_to_deviceResponse"/>
	</operation>
	<operation name="set_standby_traffic_group">
	<documentation>
 Sets the specified traffic groups to standby mode.

 If the list of traffic groups is empty, all traffic groups will be
 set to standby.

        	</documentation>
		<input message="tns:System.Failover.set_standby_traffic_groupRequest"/>
		<output message="tns:System.Failover.set_standby_traffic_groupResponse"/>
	</operation>
	<operation name="set_standby_traffic_group_to_device">
	<documentation>
 Sets the specified traffic groups to standby mode.  The traffic groups become active on the given device.

 If the list of traffic groups is empty, all traffic groups will be
 set to standby and will become active on the specified device.

        	</documentation>
		<input message="tns:System.Failover.set_standby_traffic_group_to_deviceRequest"/>
		<output message="tns:System.Failover.set_standby_traffic_group_to_deviceResponse"/>
	</operation>
	<operation name="set_offline">
	<documentation>
 Sets the device to "forced offline" state.

        	</documentation>
		<input message="tns:System.Failover.set_offlineRequest"/>
		<output message="tns:System.Failover.set_offlineResponse"/>
	</operation>
	<operation name="set_offline_release">
	<documentation>
 Sets the device to release the "forced offline" state.

        	</documentation>
		<input message="tns:System.Failover.set_offline_releaseRequest"/>
		<output message="tns:System.Failover.set_offline_releaseResponse"/>
	</operation>
	<operation name="set_failback">
	<documentation>
 Restores an active-active device configuration after a failure.  
 You can only use this command after the DB key "Failover.ManFailBack" has been created, 
 and set to a value of "enable". 

        	</documentation>
		<input message="tns:System.Failover.set_failbackRequest"/>
		<output message="tns:System.Failover.set_failbackResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:System.Failover.get_versionRequest"/>
		<output message="tns:System.Failover.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="System.FailoverBinding" type="tns:System.FailoverPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="is_redundant">
	<documentation>
 Checks to see if this device is part of a redundant pair.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_failover_mode">
	<documentation>
 Gets the current fail-over mode that the device is running in.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_peer_address">
	<documentation>
 *IMPORTANT* This method has been deprecated immediately. As of
 version 13.0.0, use Management.Device.get_configsync_address instead.

 Gets the peer IP address(es) in a redundant pair.  There will be a primary
 address and possibly a secondary address.  The primary will be the first
 entry in the returned list.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_failover_state">
	<documentation>
 Gets the current fail-over state that the device is running in.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_standby">
	<documentation>
 Sets the device to standby mode.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_standby_to_device">
	<documentation>
 Sets the device to standby mode for all traffic groups and
 requests the specified device to become active for 
 all traffic groups.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_standby_traffic_group">
	<documentation>
 Sets the specified traffic groups to standby mode.

 If the list of traffic groups is empty, all traffic groups will be
 set to standby.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_standby_traffic_group_to_device">
	<documentation>
 Sets the specified traffic groups to standby mode.  The traffic groups become active on the given device.

 If the list of traffic groups is empty, all traffic groups will be
 set to standby and will become active on the specified device.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_offline">
	<documentation>
 Sets the device to "forced offline" state.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_offline_release">
	<documentation>
 Sets the device to release the "forced offline" state.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_failback">
	<documentation>
 Restores an active-active device configuration after a failure.  
 You can only use this command after the DB key "Failover.ManFailBack" has been created, 
 and set to a value of "enable". 

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/Failover"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/Failover"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="System.Failover">
	<documentation>
 The Failover interface enables you to manipulate a device's fail-over states.  For example, you can get the state, active or standby, 
 in which a device is running in a redundant configuration.  You can also switch a device's state from active to standby.

 This interface does not support transactions.

        	</documentation>
	<port name="System.FailoverPort" binding="tns:System.FailoverBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
