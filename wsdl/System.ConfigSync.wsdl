<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="System.ConfigSync"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:simpleType name="Common.OctetSequence">
			<xsd:restriction base="xsd:base64Binary"/>
		</xsd:simpleType>
		<xsd:complexType name="System.ConfigSync.FileTransferContext">
			<xsd:sequence>
				<xsd:element name="file_data" type="tns:Common.OctetSequence"/>
				<xsd:element name="chain_type" type="tns:Common.FileChainType"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:simpleType name="System.ConfigSync.SaveMode">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="SAVE_FULL">
					<xsd:annotation>
						<xsd:documentation>SAVE_FULL</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="SAVE_HIGH_LEVEL_CONFIG">
					<xsd:annotation>
						<xsd:documentation>SAVE_HIGH_LEVEL_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="SAVE_BASE_LEVEL_CONFIG">
					<xsd:annotation>
						<xsd:documentation>SAVE_BASE_LEVEL_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="SAVE_GTM_CONFIG_ONLY">
					<xsd:annotation>
						<xsd:documentation>SAVE_GTM_CONFIG_ONLY</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="SAVE_EXCLUDE_GTM_CONFIG">
					<xsd:annotation>
						<xsd:documentation>SAVE_EXCLUDE_GTM_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="System.ConfigSync.ConfigFileEntry">
			<xsd:sequence>
				<xsd:element name="file_name" type="xsd:string"/>
				<xsd:element name="file_datetime" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:complexType name="System.ConfigSync.ConfigFileSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:System.ConfigSync.ConfigFileEntry[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="Common.FileChainType">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="FILE_UNDEFINED">
					<xsd:annotation>
						<xsd:documentation>FILE_UNDEFINED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FILE_FIRST">
					<xsd:annotation>
						<xsd:documentation>FILE_FIRST</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FILE_MIDDLE">
					<xsd:annotation>
						<xsd:documentation>FILE_MIDDLE</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FILE_UNUSED">
					<xsd:annotation>
						<xsd:documentation>FILE_UNUSED</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FILE_LAST">
					<xsd:annotation>
						<xsd:documentation>FILE_LAST</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="FILE_FIRST_AND_LAST">
					<xsd:annotation>
						<xsd:documentation>FILE_FIRST_AND_LAST</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="System.ConfigSync.ConfigExcludeComponentSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:System.ConfigSync.ConfigExcludeComponent[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
		<xsd:simpleType name="System.ConfigSync.ConfigExcludeComponent">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="CONFIG_EXCLUDE_PRIVATE_KEYS">
					<xsd:annotation>
						<xsd:documentation>CONFIG_EXCLUDE_PRIVATE_KEYS</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:simpleType name="System.ConfigSync.LoadMode">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="LOAD_HIGH_LEVEL_CONFIG">
					<xsd:annotation>
						<xsd:documentation>LOAD_HIGH_LEVEL_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOAD_BASE_LEVEL_CONFIG">
					<xsd:annotation>
						<xsd:documentation>LOAD_BASE_LEVEL_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOAD_GTM_CONFIG_ONLY">
					<xsd:annotation>
						<xsd:documentation>LOAD_GTM_CONFIG_ONLY</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="LOAD_EXCLUDE_GTM_CONFIG">
					<xsd:annotation>
						<xsd:documentation>LOAD_EXCLUDE_GTM_CONFIG</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:simpleType name="Common.ULong">
			<xsd:restriction base="xsd:long"/>
		</xsd:simpleType>
		<xsd:simpleType name="System.ConfigSync.SyncMode">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="CONFIGSYNC_BASIC">
					<xsd:annotation>
						<xsd:documentation>CONFIGSYNC_BASIC</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
				<xsd:enumeration value="CONFIGSYNC_ALL">
					<xsd:annotation>
						<xsd:documentation>CONFIGSYNC_ALL</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:simpleType name="System.ConfigSync.ConfigIncludeComponent">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="CONFIG_INCLUDE_EM_IMAGES">
					<xsd:annotation>
						<xsd:documentation>CONFIG_INCLUDE_EM_IMAGES</xsd:documentation>
					</xsd:annotation>
				</xsd:enumeration>
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:complexType name="System.ConfigSync.ConfigIncludeComponentSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='tns:System.ConfigSync.ConfigIncludeComponent[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="System.ConfigSync.get_configuration_listRequest">
</message>
<message name="System.ConfigSync.get_configuration_listResponse">
	<part name="return" type="tns:System.ConfigSync.ConfigFileSequence"/>
</message>

<message name="System.ConfigSync.get_single_configuration_file_listRequest">
</message>
<message name="System.ConfigSync.get_single_configuration_file_listResponse">
	<part name="return" type="tns:System.ConfigSync.ConfigFileSequence"/>
</message>

<message name="System.ConfigSync.load_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="load_flag" type="tns:System.ConfigSync.LoadMode"/>
</message>
<message name="System.ConfigSync.load_configurationResponse">
</message>

<message name="System.ConfigSync.save_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="save_flag" type="tns:System.ConfigSync.SaveMode"/>
</message>
<message name="System.ConfigSync.save_configurationResponse">
</message>

<message name="System.ConfigSync.save_partial_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="save_flag" type="tns:System.ConfigSync.SaveMode"/>
	<part name="features_to_exclude" type="tns:System.ConfigSync.ConfigExcludeComponentSequence"/>
	<part name="features_to_include" type="tns:System.ConfigSync.ConfigIncludeComponentSequence"/>
</message>
<message name="System.ConfigSync.save_partial_configurationResponse">
</message>

<message name="System.ConfigSync.save_partition_configurationRequest">
	<part name="partitions" type="tns:Common.StringSequence"/>
	<part name="save_flag" type="tns:System.ConfigSync.SaveMode"/>
</message>
<message name="System.ConfigSync.save_partition_configurationResponse">
</message>

<message name="System.ConfigSync.save_encrypted_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="passphrase" type="xsd:string"/>
</message>
<message name="System.ConfigSync.save_encrypted_configurationResponse">
</message>

<message name="System.ConfigSync.save_partial_encrypted_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="passphrase" type="xsd:string"/>
	<part name="features_to_exclude" type="tns:System.ConfigSync.ConfigExcludeComponentSequence"/>
	<part name="features_to_include" type="tns:System.ConfigSync.ConfigIncludeComponentSequence"/>
</message>
<message name="System.ConfigSync.save_partial_encrypted_configurationResponse">
</message>

<message name="System.ConfigSync.save_single_configuration_fileRequest">
	<part name="filename" type="xsd:string"/>
	<part name="save_flag" type="tns:System.ConfigSync.SaveMode"/>
	<part name="passphrase" type="xsd:string"/>
	<part name="tarfile" type="xsd:string"/>
</message>
<message name="System.ConfigSync.save_single_configuration_fileResponse">
</message>

<message name="System.ConfigSync.install_configurationRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_configurationResponse">
</message>

<message name="System.ConfigSync.install_configuration_quietlyRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_configuration_quietlyResponse">
</message>

<message name="System.ConfigSync.install_all_configurationRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_all_configurationResponse">
</message>

<message name="System.ConfigSync.install_encrypted_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="passphrase" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_encrypted_configurationResponse">
</message>

<message name="System.ConfigSync.install_encrypted_configuration_quietlyRequest">
	<part name="filename" type="xsd:string"/>
	<part name="passphrase" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_encrypted_configuration_quietlyResponse">
</message>

<message name="System.ConfigSync.install_all_encrypted_configurationRequest">
	<part name="filename" type="xsd:string"/>
	<part name="passphrase" type="xsd:string"/>
</message>
<message name="System.ConfigSync.install_all_encrypted_configurationResponse">
</message>

<message name="System.ConfigSync.install_single_configuration_fileRequest">
	<part name="filename" type="xsd:string"/>
	<part name="load_flag" type="tns:System.ConfigSync.LoadMode"/>
	<part name="passphrase" type="xsd:string"/>
	<part name="tarfile" type="xsd:string"/>
	<part name="merge" type="xsd:boolean"/>
</message>
<message name="System.ConfigSync.install_single_configuration_fileResponse">
</message>

<message name="System.ConfigSync.synchronize_configurationRequest">
	<part name="sync_flag" type="tns:System.ConfigSync.SyncMode"/>
</message>
<message name="System.ConfigSync.synchronize_configurationResponse">
</message>

<message name="System.ConfigSync.synchronize_to_groupRequest">
	<part name="group" type="xsd:string"/>
</message>
<message name="System.ConfigSync.synchronize_to_groupResponse">
</message>

<message name="System.ConfigSync.synchronize_to_group_v2Request">
	<part name="group" type="xsd:string"/>
	<part name="device" type="xsd:string"/>
	<part name="force" type="xsd:boolean"/>
</message>
<message name="System.ConfigSync.synchronize_to_group_v2Response">
</message>

<message name="System.ConfigSync.synchronize_from_groupRequest">
	<part name="group" type="xsd:string"/>
</message>
<message name="System.ConfigSync.synchronize_from_groupResponse">
</message>

<message name="System.ConfigSync.rollback_configurationRequest">
</message>
<message name="System.ConfigSync.rollback_configurationResponse">
</message>

<message name="System.ConfigSync.delete_configurationRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.delete_configurationResponse">
</message>

<message name="System.ConfigSync.delete_single_configuration_fileRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.delete_single_configuration_fileResponse">
</message>

<message name="System.ConfigSync.upload_configurationRequest">
	<part name="config_name" type="xsd:string"/>
	<part name="file_context" type="tns:System.ConfigSync.FileTransferContext"/>
</message>
<message name="System.ConfigSync.upload_configurationResponse">
</message>

<message name="System.ConfigSync.download_configurationRequest">
	<part name="config_name" type="xsd:string"/>
	<part name="chunk_size" type="xsd:long"/>
	<part name="file_offset" type="xsd:long"/>
</message>
<message name="System.ConfigSync.download_configurationResponse">
	<part name="return" type="tns:System.ConfigSync.FileTransferContext"/>
	<part name="file_offset" type="xsd:long"/>
</message>

<message name="System.ConfigSync.delete_fileRequest">
	<part name="filename" type="xsd:string"/>
</message>
<message name="System.ConfigSync.delete_fileResponse">
</message>

<message name="System.ConfigSync.upload_fileRequest">
	<part name="file_name" type="xsd:string"/>
	<part name="file_context" type="tns:System.ConfigSync.FileTransferContext"/>
</message>
<message name="System.ConfigSync.upload_fileResponse">
</message>

<message name="System.ConfigSync.download_fileRequest">
	<part name="file_name" type="xsd:string"/>
	<part name="chunk_size" type="xsd:long"/>
	<part name="file_offset" type="xsd:long"/>
</message>
<message name="System.ConfigSync.download_fileResponse">
	<part name="return" type="tns:System.ConfigSync.FileTransferContext"/>
	<part name="file_offset" type="xsd:long"/>
</message>

<message name="System.ConfigSync.move_fileRequest">
	<part name="from_path" type="xsd:string"/>
	<part name="to_path" type="xsd:string"/>
</message>
<message name="System.ConfigSync.move_fileResponse">
</message>

<message name="System.ConfigSync.get_versionRequest">
</message>
<message name="System.ConfigSync.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="System.ConfigSyncPortType">
	<operation name="get_configuration_list">
       	<documentation>
 Gets a list of all available configuration archives on the system.
 
        	</documentation>
		<input message="tns:System.ConfigSync.get_configuration_listRequest"/>
		<output message="tns:System.ConfigSync.get_configuration_listResponse"/>
	</operation>
	<operation name="get_single_configuration_file_list">
	<documentation>
 Gets a list of all available single configuration files (SCF) on the system.
 Note that because you have the ability to specify an SCF file without a .scf
 extension, this will return all files in the /var/local/scf directory, except
 for files with an explicit ".tar" extension.

        	</documentation>
		<input message="tns:System.ConfigSync.get_single_configuration_file_listRequest"/>
		<output message="tns:System.ConfigSync.get_single_configuration_file_listResponse"/>
	</operation>
	<operation name="load_configuration">
	<documentation>
 Load the system configuration.

 As of BIG-IP_v11.0.0, the filename argument is ignored.  Only the
 official system configuration files will be loaded.
 
        	</documentation>
		<input message="tns:System.ConfigSync.load_configurationRequest"/>
		<output message="tns:System.ConfigSync.load_configurationResponse"/>
	</operation>
	<operation name="save_configuration">
	<documentation>
 Saves the current configurations to the specified archive.
 If the "save_flag" is either SAVE_HIGH_LEVEL_CONFIG or SAVE_BASE_LEVEL_CONFIG, the
 specified filename will be ignored, since by default, configuration will be saved into
 /config/bigip.conf or /config/bigip_base.conf respectively.
 
        	</documentation>
		<input message="tns:System.ConfigSync.save_configurationRequest"/>
		<output message="tns:System.ConfigSync.save_configurationResponse"/>
	</operation>
	<operation name="save_partial_configuration">
	<documentation>
 Saves the current configurations to the specified archive.
 If the "save_flag" is either SAVE_HIGH_LEVEL_CONFIG or SAVE_BASE_LEVEL_CONFIG, the
 specified filename will be ignored, since by default, configuration will be saved into
 /config/bigip.conf or /config/bigip_base.conf respectively.
 If any "features_to_exclude" components are specified, those components
 are excluded from the configuration.
 If any "features_to_include" components are specified, those components
 are included from the configuration.
 Note that feature inclusion/exclusion will only work when the
 save flag is "SAVE_FULL".
 
        	</documentation>
		<input message="tns:System.ConfigSync.save_partial_configurationRequest"/>
		<output message="tns:System.ConfigSync.save_partial_configurationResponse"/>
	</operation>
	<operation name="save_partition_configuration">
	<documentation>
 Saves the current configuration in the partitions specified based on the save flag
 provided.
 
        	</documentation>
		<input message="tns:System.ConfigSync.save_partition_configurationRequest"/>
		<output message="tns:System.ConfigSync.save_partition_configurationResponse"/>
	</operation>
	<operation name="save_encrypted_configuration">
	<documentation>
 Saves and encrypts the current configurations to the specified archive.
 This method is used to save whole configuration archive, not just what's
 in bigip.conf or bigip_base.conf.
 
        	</documentation>
		<input message="tns:System.ConfigSync.save_encrypted_configurationRequest"/>
		<output message="tns:System.ConfigSync.save_encrypted_configurationResponse"/>
	</operation>
	<operation name="save_partial_encrypted_configuration">
	<documentation>
 Saves and encrypts the current configurations to the specified archive.
 This method is used to save whole configuration archive, not just what's
 in bigip.conf or bigip_base.conf.
 If any "features_to_exclude" components are specified, those components
 are excluded from the configuration.
 If any "features_to_include" components are specified, those components
 are included from the configuration.
 Note that feature inclusion/exclusion will only work when the
 save flag is "SAVE_FULL".
 
        	</documentation>
		<input message="tns:System.ConfigSync.save_partial_encrypted_configurationRequest"/>
		<output message="tns:System.ConfigSync.save_partial_encrypted_configurationResponse"/>
	</operation>
	<operation name="save_single_configuration_file">
	<documentation>
 Saves the current configurations to the specified single configuration file (SCF). An
 SCF file is a flat file that holds an entire config, as opposed to an archive. The file
 can be encrypted by specifying a passphrase. Files in the system filestore in the
 /config/filestore directory will not be saved into the SCF file. For the files in
 filestore that are being referenced by the SCF configuration file, they will be
 automatically saved into a separate TAR file when a copy of the SCF file is saved. This
 TAR file can be specified. If the "save_flag" is SAVE_BASE_LEVEL_CONFIG, tarfile cannot
 be specified. If it is SAVE_EXCLUDE_GTM_CONFIG, neither passphrase nor tarfile can be
 specified. SAVE_HIGH_LEVEL_CONFIG is not supported for this feature.

        	</documentation>
		<input message="tns:System.ConfigSync.save_single_configuration_fileRequest"/>
		<output message="tns:System.ConfigSync.save_single_configuration_fileResponse"/>
	</operation>
	<operation name="install_configuration">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_configurationRequest"/>
		<output message="tns:System.ConfigSync.install_configurationResponse"/>
	</operation>
	<operation name="install_configuration_quietly">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device, suppressing output.

 This is intended for system use only.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_configuration_quietlyRequest"/>
		<output message="tns:System.ConfigSync.install_configuration_quietlyResponse"/>
	</operation>
	<operation name="install_all_configuration">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device using the 'all' flag.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_all_configurationRequest"/>
		<output message="tns:System.ConfigSync.install_all_configurationResponse"/>
	</operation>
	<operation name="install_encrypted_configuration">
	<documentation>
 Installs the encrypted configurations contained in the specified archive to 
 the local device. If the specified archive is not already encrypted, then 
 the passphrase is ignored, and installation will take place as normal.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_encrypted_configurationRequest"/>
		<output message="tns:System.ConfigSync.install_encrypted_configurationResponse"/>
	</operation>
	<operation name="install_encrypted_configuration_quietly">
	<documentation>
 Installs the encrypted configurations contained in the specified
 archive to the local device, suppressing the output. If the
 specified archive is not already encrypted, then the passphrase is
 ignored, and installation will take place as normal.
 
 This is intended for system use only.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_encrypted_configuration_quietlyRequest"/>
		<output message="tns:System.ConfigSync.install_encrypted_configuration_quietlyResponse"/>
	</operation>
	<operation name="install_all_encrypted_configuration">
	<documentation>
 Installs the encrypted configurations contained in the specified archive to 
 the local device using the 'all' flag. If the specified archive is not already encrypted, then 
 the passphrase is ignored, and installation will take place as normal.
 
        	</documentation>
		<input message="tns:System.ConfigSync.install_all_encrypted_configurationRequest"/>
		<output message="tns:System.ConfigSync.install_all_encrypted_configurationResponse"/>
	</operation>
	<operation name="install_single_configuration_file">
	<documentation>
 Installs the configurations contained in the specified single configuration file (SCF) to 
 the local device.

        	</documentation>
		<input message="tns:System.ConfigSync.install_single_configuration_fileRequest"/>
		<output message="tns:System.ConfigSync.install_single_configuration_fileResponse"/>
	</operation>
	<operation name="synchronize_configuration">
	<documentation>
 Note: This method has been deprecated, because syncing has
 changed radically with the Centralized Management
 Infrastructure feature.  Please use synchronize_to_group_v2
 and synchronize_from_group instead.  This method now finds
 all the device groups of which the local device is a
 member, and runs synchronize_to_group on those groups. It
 does not support the sync_flag anymore -- that flag is now
 ignored.

 Synchronizes the configurations between the two devices in a redundant system.  
 In the case of cache devices, synchronizes the configurations across the cluster.
 
        	</documentation>
		<input message="tns:System.ConfigSync.synchronize_configurationRequest"/>
		<output message="tns:System.ConfigSync.synchronize_configurationResponse"/>
	</operation>
	<operation name="synchronize_to_group">
	<documentation>
 Note: This method has been deprecated. Please use the
 synchronize_to_group_v2 method instead.

 Synchronize the configuration to the given group.

 This method causes the configuration for the local device to
 be pushed to all members of the given device group, provided that
 the current device has the newest configuration in the device
 group. If this is not the case, then this method does nothing.

        	</documentation>
		<input message="tns:System.ConfigSync.synchronize_to_groupRequest"/>
		<output message="tns:System.ConfigSync.synchronize_to_groupResponse"/>
	</operation>
	<operation name="synchronize_to_group_v2">
	<documentation>
 Synchronize the configuration from the specified device to the
 given group.

 This method causes the configuration for the specified device to
 be pushed to all members of the given device group.

 If force is true, then the configuration will be pushed
 unconditionally. If force is false, then update all devices in
 the device group that have configuration older than the specified
 device.

 It is required to have force true in order to synchronize a
 device other than the local device to the group.

        	</documentation>
		<input message="tns:System.ConfigSync.synchronize_to_group_v2Request"/>
		<output message="tns:System.ConfigSync.synchronize_to_group_v2Response"/>
	</operation>
	<operation name="synchronize_from_group">
	<documentation>
 Synchronize the configuration from the given group.

 This method updates the local device with the configuration from
 the device in the given device group with the most recently
 changed configuration.

 If the local device has configuration that has not yet been pushed
 to the rest of the device group, then this does nothing in order
 to prevent the accidental deleting of configuration.

        	</documentation>
		<input message="tns:System.ConfigSync.synchronize_from_groupRequest"/>
		<output message="tns:System.ConfigSync.synchronize_from_groupResponse"/>
	</operation>
	<operation name="rollback_configuration">
	<documentation>
 Rolls back to the previous configuration.
 
        	</documentation>
		<input message="tns:System.ConfigSync.rollback_configurationRequest"/>
		<output message="tns:System.ConfigSync.rollback_configurationResponse"/>
	</operation>
	<operation name="delete_configuration">
	<documentation>
 Deletes the specified configuration from the archive directory.
 If the specified file doesn't exist, an exception will be raised.
 The specified configuration should not contain any path information
 since it is restricted to be in the archive directory.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ / \ : ; * ? " &lt; &gt; | &amp;
 
        	</documentation>
		<input message="tns:System.ConfigSync.delete_configurationRequest"/>
		<output message="tns:System.ConfigSync.delete_configurationResponse"/>
	</operation>
	<operation name="delete_single_configuration_file">
	<documentation>
 Deletes the specified configuration from the SCF directory.
 If the specified file doesn't exist, an exception will be raised.
 The specified configuration should not contain any path information
 since it is restricted to be in the SCF directory. If there is a
 default TAR file archive in the same directory of the form
 [filepath].tar, it will be deleted as well. If a non-default TAR filename
 was specified when the SCF file was created, it can be deleted separately
 with this same method.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ / \ : ; * ? " &lt; &gt; | &amp;

        	</documentation>
		<input message="tns:System.ConfigSync.delete_single_configuration_fileRequest"/>
		<output message="tns:System.ConfigSync.delete_single_configuration_fileResponse"/>
	</operation>
	<operation name="upload_configuration">
	<documentation>
 Uploads the configurations to the device.
 
        	</documentation>
		<input message="tns:System.ConfigSync.upload_configurationRequest"/>
		<output message="tns:System.ConfigSync.upload_configurationResponse"/>
	</operation>
	<operation name="download_configuration">
	<documentation>
 Downloads the configurations from the device.
 
        	</documentation>
		<input message="tns:System.ConfigSync.download_configurationRequest"/>
		<output message="tns:System.ConfigSync.download_configurationResponse"/>
	</operation>
	<operation name="delete_file">
	<documentation>
 Deletes the specified file from the device.  If the specified file
 doesn't exist or an error occurs, an exception will be raised.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ \ : ; * ? " &lt; &gt; | &amp;
 
        	</documentation>
		<input message="tns:System.ConfigSync.delete_fileRequest"/>
		<output message="tns:System.ConfigSync.delete_fileResponse"/>
	</operation>
	<operation name="upload_file">
	<documentation>
 A generic file upload mechanism to transfer a file to the device.

 Depending on your system settings (including settings like appliance
 mode, FIPS, and Common Criteria), the set of files that can be
 operated on may be restricted. If any of these restrictions occur,
 an OperationFailed error will be generated.

        	</documentation>
		<input message="tns:System.ConfigSync.upload_fileRequest"/>
		<output message="tns:System.ConfigSync.upload_fileResponse"/>
	</operation>
	<operation name="download_file">
	<documentation>
 A generic file download mechanism to download a file from the device.

 Depending on your system settings (including settings like appliance
 mode, FIPS, and Common Criteria), the set of files that can be
 operated on may be restricted. If any of these restrictions occur,
 an OperationFailed error will be generated.

        	</documentation>
		<input message="tns:System.ConfigSync.download_fileRequest"/>
		<output message="tns:System.ConfigSync.download_fileResponse"/>
	</operation>
	<operation name="move_file">
	<documentation>
 A generic file move mechanism to move files on a device.
 This call does a rename of the file and will not work across
 filesystem boundaries.
 
        	</documentation>
		<input message="tns:System.ConfigSync.move_fileRequest"/>
		<output message="tns:System.ConfigSync.move_fileResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:System.ConfigSync.get_versionRequest"/>
		<output message="tns:System.ConfigSync.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="System.ConfigSyncBinding" type="tns:System.ConfigSyncPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_configuration_list">
	<documentation>
 Gets a list of all available configuration archives on the system.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_single_configuration_file_list">
	<documentation>
 Gets a list of all available single configuration files (SCF) on the system.
 Note that because you have the ability to specify an SCF file without a .scf
 extension, this will return all files in the /var/local/scf directory, except
 for files with an explicit ".tar" extension.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="load_configuration">
	<documentation>
 Load the system configuration.

 As of BIG-IP_v11.0.0, the filename argument is ignored.  Only the
 official system configuration files will be loaded.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_configuration">
	<documentation>
 Saves the current configurations to the specified archive.
 If the "save_flag" is either SAVE_HIGH_LEVEL_CONFIG or SAVE_BASE_LEVEL_CONFIG, the
 specified filename will be ignored, since by default, configuration will be saved into
 /config/bigip.conf or /config/bigip_base.conf respectively.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_partial_configuration">
	<documentation>
 Saves the current configurations to the specified archive.
 If the "save_flag" is either SAVE_HIGH_LEVEL_CONFIG or SAVE_BASE_LEVEL_CONFIG, the
 specified filename will be ignored, since by default, configuration will be saved into
 /config/bigip.conf or /config/bigip_base.conf respectively.
 If any "features_to_exclude" components are specified, those components
 are excluded from the configuration.
 If any "features_to_include" components are specified, those components
 are included from the configuration.
 Note that feature inclusion/exclusion will only work when the
 save flag is "SAVE_FULL".
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_partition_configuration">
	<documentation>
 Saves the current configuration in the partitions specified based on the save flag
 provided.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_encrypted_configuration">
	<documentation>
 Saves and encrypts the current configurations to the specified archive.
 This method is used to save whole configuration archive, not just what's
 in bigip.conf or bigip_base.conf.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_partial_encrypted_configuration">
	<documentation>
 Saves and encrypts the current configurations to the specified archive.
 This method is used to save whole configuration archive, not just what's
 in bigip.conf or bigip_base.conf.
 If any "features_to_exclude" components are specified, those components
 are excluded from the configuration.
 If any "features_to_include" components are specified, those components
 are included from the configuration.
 Note that feature inclusion/exclusion will only work when the
 save flag is "SAVE_FULL".
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="save_single_configuration_file">
	<documentation>
 Saves the current configurations to the specified single configuration file (SCF). An
 SCF file is a flat file that holds an entire config, as opposed to an archive. The file
 can be encrypted by specifying a passphrase. Files in the system filestore in the
 /config/filestore directory will not be saved into the SCF file. For the files in
 filestore that are being referenced by the SCF configuration file, they will be
 automatically saved into a separate TAR file when a copy of the SCF file is saved. This
 TAR file can be specified. If the "save_flag" is SAVE_BASE_LEVEL_CONFIG, tarfile cannot
 be specified. If it is SAVE_EXCLUDE_GTM_CONFIG, neither passphrase nor tarfile can be
 specified. SAVE_HIGH_LEVEL_CONFIG is not supported for this feature.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_configuration">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_configuration_quietly">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device, suppressing output.

 This is intended for system use only.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_all_configuration">
	<documentation>
 Installs the configurations contained in the specified archive to 
 the local device using the 'all' flag.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_encrypted_configuration">
	<documentation>
 Installs the encrypted configurations contained in the specified archive to 
 the local device. If the specified archive is not already encrypted, then 
 the passphrase is ignored, and installation will take place as normal.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_encrypted_configuration_quietly">
	<documentation>
 Installs the encrypted configurations contained in the specified
 archive to the local device, suppressing the output. If the
 specified archive is not already encrypted, then the passphrase is
 ignored, and installation will take place as normal.
 
 This is intended for system use only.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_all_encrypted_configuration">
	<documentation>
 Installs the encrypted configurations contained in the specified archive to 
 the local device using the 'all' flag. If the specified archive is not already encrypted, then 
 the passphrase is ignored, and installation will take place as normal.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="install_single_configuration_file">
	<documentation>
 Installs the configurations contained in the specified single configuration file (SCF) to 
 the local device.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="synchronize_configuration">
	<documentation>
 Note: This method has been deprecated, because syncing has
 changed radically with the Centralized Management
 Infrastructure feature.  Please use synchronize_to_group_v2
 and synchronize_from_group instead.  This method now finds
 all the device groups of which the local device is a
 member, and runs synchronize_to_group on those groups. It
 does not support the sync_flag anymore -- that flag is now
 ignored.

 Synchronizes the configurations between the two devices in a redundant system.  
 In the case of cache devices, synchronizes the configurations across the cluster.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="synchronize_to_group">
	<documentation>
 Note: This method has been deprecated. Please use the
 synchronize_to_group_v2 method instead.

 Synchronize the configuration to the given group.

 This method causes the configuration for the local device to
 be pushed to all members of the given device group, provided that
 the current device has the newest configuration in the device
 group. If this is not the case, then this method does nothing.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="synchronize_to_group_v2">
	<documentation>
 Synchronize the configuration from the specified device to the
 given group.

 This method causes the configuration for the specified device to
 be pushed to all members of the given device group.

 If force is true, then the configuration will be pushed
 unconditionally. If force is false, then update all devices in
 the device group that have configuration older than the specified
 device.

 It is required to have force true in order to synchronize a
 device other than the local device to the group.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="synchronize_from_group">
	<documentation>
 Synchronize the configuration from the given group.

 This method updates the local device with the configuration from
 the device in the given device group with the most recently
 changed configuration.

 If the local device has configuration that has not yet been pushed
 to the rest of the device group, then this does nothing in order
 to prevent the accidental deleting of configuration.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="rollback_configuration">
	<documentation>
 Rolls back to the previous configuration.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_configuration">
	<documentation>
 Deletes the specified configuration from the archive directory.
 If the specified file doesn't exist, an exception will be raised.
 The specified configuration should not contain any path information
 since it is restricted to be in the archive directory.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ / \ : ; * ? " &lt; &gt; | &amp;
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_single_configuration_file">
	<documentation>
 Deletes the specified configuration from the SCF directory.
 If the specified file doesn't exist, an exception will be raised.
 The specified configuration should not contain any path information
 since it is restricted to be in the SCF directory. If there is a
 default TAR file archive in the same directory of the form
 [filepath].tar, it will be deleted as well. If a non-default TAR filename
 was specified when the SCF file was created, it can be deleted separately
 with this same method.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ / \ : ; * ? " &lt; &gt; | &amp;

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="upload_configuration">
	<documentation>
 Uploads the configurations to the device.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="download_configuration">
	<documentation>
 Downloads the configurations from the device.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_file">
	<documentation>
 Deletes the specified file from the device.  If the specified file
 doesn't exist or an error occurs, an exception will be raised.
 NOTE: File names containing the following characters will be 
 considered invalid: ` ~ \ : ; * ? " &lt; &gt; | &amp;
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="upload_file">
	<documentation>
 A generic file upload mechanism to transfer a file to the device.

 Depending on your system settings (including settings like appliance
 mode, FIPS, and Common Criteria), the set of files that can be
 operated on may be restricted. If any of these restrictions occur,
 an OperationFailed error will be generated.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="download_file">
	<documentation>
 A generic file download mechanism to download a file from the device.

 Depending on your system settings (including settings like appliance
 mode, FIPS, and Common Criteria), the set of files that can be
 operated on may be restricted. If any of these restrictions occur,
 an OperationFailed error will be generated.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="move_file">
	<documentation>
 A generic file move mechanism to move files on a device.
 This call does a rename of the file and will not work across
 filesystem boundaries.
 
        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:System/ConfigSync"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:System/ConfigSync"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="System.ConfigSync">
	<documentation>
 The ConfigSync interface enables you to work with configuration files.  For example, use the 
 ConfigSync interface to retrieve a configuration file list, roll up and save a specified configuration, 
 install a configuration on a device, synchronize configuration setups, roll back a configuration, and 
 upload or download a configuration.

 This interface does not support transactions.

        	</documentation>
	<port name="System.ConfigSyncPort" binding="tns:System.ConfigSyncBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
