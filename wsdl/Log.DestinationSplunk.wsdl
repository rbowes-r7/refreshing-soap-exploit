<?xml version="1.0" ?>
<!--
Copyright (c) 1996-2018, F5 Networks, Inc., Seattle, Washington. All rights reserved.  

F5, F5 Networks, the F5 logo, BIG-IP, 3-DNS, iControl, GLOBAL-SITE, SEE-IT, EDGE-FX, FireGuard, Internet Control Architecture, IP Application Switch, iRules, PACKET VELOCITY, SYN Check, CONTROL YOUR WORLD, OneConnect, ZoneRunner, uRoam, FirePass, and TrafficShield are registered trademarks or trademarks of F5 Networks, Inc., in the U.S. and certain other countries. 

All other trademarks mentioned in this document are the property of their respective owners. F5 Networks' trademarks may not be used in connection with any product or service except as permitted in writing by F5.

-->
<definitions name="Log.DestinationSplunk"
	targetNamespace="urn:iControl"
	xmlns:tns="urn:iControl"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns="http://schemas.xmlsoap.org/wsdl/">

<!-- types -->

<types>
	<xsd:schema targetNamespace='urn:iControl'
		xmlns='http://www.w3.org/2001/XMLSchema'
		xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
		xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
		<xsd:complexType name="Common.StringSequence">
			<xsd:complexContent>
				<xsd:restriction base='SOAP-ENC:Array'>
					<xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:schema>
</types>

<!-- message -->

<message name="Log.DestinationSplunk.get_listRequest">
</message>
<message name="Log.DestinationSplunk.get_listResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationSplunk.createRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="forwarding_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.createResponse">
</message>

<message name="Log.DestinationSplunk.delete_splunk_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.delete_splunk_destinationResponse">
</message>

<message name="Log.DestinationSplunk.delete_all_splunk_destinationsRequest">
</message>
<message name="Log.DestinationSplunk.delete_all_splunk_destinationsResponse">
</message>

<message name="Log.DestinationSplunk.set_forwarding_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="forwarding_destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.set_forwarding_destinationResponse">
</message>

<message name="Log.DestinationSplunk.get_forwarding_destinationRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.get_forwarding_destinationResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationSplunk.set_descriptionRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
	<part name="descriptions" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.set_descriptionResponse">
</message>

<message name="Log.DestinationSplunk.get_descriptionRequest">
	<part name="destinations" type="tns:Common.StringSequence"/>
</message>
<message name="Log.DestinationSplunk.get_descriptionResponse">
	<part name="return" type="tns:Common.StringSequence"/>
</message>

<message name="Log.DestinationSplunk.get_versionRequest">
</message>
<message name="Log.DestinationSplunk.get_versionResponse">
	<part name="return" type="xsd:string"/>
</message>

<!-- portType -->

<portType name="Log.DestinationSplunkPortType">
	<operation name="get_list">
   	<documentation>
 Gets the list of Splunk destinations.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.get_listRequest"/>
		<output message="tns:Log.DestinationSplunk.get_listResponse"/>
	</operation>
	<operation name="create">
	<documentation>
 Creates a Splunk destination.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.createRequest"/>
		<output message="tns:Log.DestinationSplunk.createResponse"/>
	</operation>
	<operation name="delete_splunk_destination">
	<documentation>
 Deletes the specified Splunk log destinations.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.delete_splunk_destinationRequest"/>
		<output message="tns:Log.DestinationSplunk.delete_splunk_destinationResponse"/>
	</operation>
	<operation name="delete_all_splunk_destinations">
	<documentation>
 Deletes all Splunk log destinations.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.delete_all_splunk_destinationsRequest"/>
		<output message="tns:Log.DestinationSplunk.delete_all_splunk_destinationsResponse"/>
	</operation>
	<operation name="set_forwarding_destination">
	<documentation>
 Sets the destination that will forward Splunk formatted messages.
 The destination must be a database, remote HSL, local Syslog,
 or remote Syslog destination.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.set_forwarding_destinationRequest"/>
		<output message="tns:Log.DestinationSplunk.set_forwarding_destinationResponse"/>
	</operation>
	<operation name="get_forwarding_destination">
	<documentation>
 Gets the destination that will forward Splunk formatted messages.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.get_forwarding_destinationRequest"/>
		<output message="tns:Log.DestinationSplunk.get_forwarding_destinationResponse"/>
	</operation>
	<operation name="set_description">
	<documentation>
 Sets the description for the specified Splunk log destinations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.set_descriptionRequest"/>
		<output message="tns:Log.DestinationSplunk.set_descriptionResponse"/>
	</operation>
	<operation name="get_description">
	<documentation>
 Gets the description for the specified Splunk log destinations.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.get_descriptionRequest"/>
		<output message="tns:Log.DestinationSplunk.get_descriptionResponse"/>
	</operation>
	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<input message="tns:Log.DestinationSplunk.get_versionRequest"/>
		<output message="tns:Log.DestinationSplunk.get_versionResponse"/>
	</operation>
</portType>

<!-- binding -->

<binding name="Log.DestinationSplunkBinding" type="tns:Log.DestinationSplunkPortType">
	<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
	<operation name="get_list">
	<documentation>
 Gets the list of Splunk destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="create">
	<documentation>
 Creates a Splunk destination.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_splunk_destination">
	<documentation>
 Deletes the specified Splunk log destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="delete_all_splunk_destinations">
	<documentation>
 Deletes all Splunk log destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_forwarding_destination">
	<documentation>
 Sets the destination that will forward Splunk formatted messages.
 The destination must be a database, remote HSL, local Syslog,
 or remote Syslog destination.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_forwarding_destination">
	<documentation>
 Gets the destination that will forward Splunk formatted messages.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="set_description">
	<documentation>
 Sets the description for the specified Splunk log destinations.

 This is an arbitrary field which can be used for any purpose.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_description">
	<documentation>
 Gets the description for the specified Splunk log destinations.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>

	<operation name="get_version">
	<documentation>
 Gets the version information for this interface.

        	</documentation>
		<soap:operation soapAction="urn:iControl:Log/DestinationSplunk"/>
		<input>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</input>
		<output>
			<soap:body
				use="encoded"
				namespace="urn:iControl:Log/DestinationSplunk"
				encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
		</output>
	</operation>
</binding>

<!-- service -->

<service name="Log.DestinationSplunk">
	<documentation>
 The Splunk destination interface enables you to format messages in the
 Splunk format then pass them to a destination that will deliver the
 message.

        	</documentation>
	<port name="Log.DestinationSplunkPort" binding="tns:Log.DestinationSplunkBinding">
		<soap:address location="https://url_to_service"/>
	</port>
</service>
</definitions>
